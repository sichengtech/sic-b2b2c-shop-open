#
# 本作品使用 木兰公共许可证,第2版（Mulan PubL v2） 开源协议，请遵守相关条款，或者联系sicheng.net获取商用授权。
# Copyright (c) 2016 SiCheng.Net
# This software is licensed under Mulan PubL v2.
# You can use this software according to the terms and conditions of the Mulan PubL v2.
# You may obtain a copy of Mulan PubL v2 at:
#          http://license.coscl.org.cn/MulanPubL-2.0
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PubL v2 for more details.
#

############################################################
#
# fdp.properties 配置文件是本工程的核心配置文件，这里的fdp.properties只是一个空文件，它需要被覆盖。
# shop-data模块src/main/resources目录下有3个环境真正的fdp.properties配置文件，会覆盖这个空文件。
#
# 当使用IntelliJ IDEA 集成开发工具时，可使用它的Maven视图，找到“配置文件”，用鼠标勾选“环境”，Ctrl+F9编译，就可实现“覆盖”到编译输出目录（不是源码目录）。
# 当使用Maven打包时打包命令添加“环境参数”就会自动取对应环境的配置文件，会完成“覆盖”到编译输出目录（不是源码目录）。
#
############################################################

# 背景
# 在做项目开时会有多种环境，如：开发环境、测试环境、生产环境，不同环境的配置文件不同。
# 我们的工程要运行起来，也要使用与环境配套的配置文件。
# 把在启动时、打包发布时，都要手动根据环境更改配置文件内容，达到适应环境，成功运行的目标。
# 这是人工操作，麻烦、容易出错。需要一个工程化的解决办法。

# 解决方案
# 采用maven多环境技术，为每个环境准备一份独立的配置文件。
# 利用Maven插件在打包时，根据打包命令的“环境参数”自动取对应环境的配置文件打到war包、ja包中，减少人工干预的部分，工程化的解决“多环境”问题。

# 实施
# 在src/main/resources目录下建立各个环境的专用的文件夹，文件来个放各个环境的专用的配置文件
#   env-cn  中文商城开发环境，内有本环境专用的配置文件
#   env-en  英文商城开发环境，内有本环境专用的配置文件

# 修改pom.xml文件，添加以下内容（完整的pom.xml文件请看本项目pom.xml文件）
# Maven多环境配置，第一部分
# Maven多环境配置，第二部分
# Maven多环境配置，第三部分

# 打包命令
# 用Eclipse来打包
# clean compile package 打开发环境的包
# clean compile -P env-cn package 打env-cn环境的包
# clean compile -P env-en package 打env-en环境的包

# 使用mvn命令来打包
# mvn clean ; mvn compile; mvn package; 打开发环境的包
# mvn clean ; mvn compile; mvn -P env-cn package; 打env-cn环境的包
# mvn clean ; mvn compile; mvn -P env-en package; 打env-en环境的包

# 验证
# 在Eclipse中，进入target目录，这是存放mvc输出的目录，查看文件夹中的文件，包含的配置文件是不是你想要的某个环境专用的配置文件。

# 原理讲解
# 当使用clean compile -P env-en package  命令打war包时， -P env-en 表示打env-en环境的包，就会使用env-en文件夹的中的配置文件，替换WEB-INF/classes下的同名文件，实现了打包时区分各个环境。
# 当使用clean compile -P env-cn package  命令打war包时， -P env-cn 表示打env-cn环境的包，就会使用env-cn文件夹的中的配置文件，替换WEB-INF/classes下的同名文件，但env-cn下无文件，就没有替换。使用的还是开发环境的配置文件。
