#
# SiC B2B2C Shop 使用 木兰公共许可证,第2版（Mulan PubL v2） 开源协议，请遵守相关条款，或者联系sicheng.net获取商用授权书。
# Copyright (c) 2016 SiCheng.Net
# SiC B2B2C Shop is licensed under Mulan PubL v2.
# You can use this software according to the terms and conditions of the Mulan PubL v2.
# You may obtain a copy of Mulan PubL v2 at:
#          http://license.coscl.org.cn/MulanPubL-2.0
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND,
# EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT,
# MERCHANTABILITY OR FIT FOR A PARTICULAR PURPOSE.
# See the Mulan PubL v2 for more details.
#

##############################
# 本配置文件说明
# 环境：env-cn
# 本配置文件用于中文商城开发环境
##############################

##############################
# 关系型数据库配置
# 支持2种数据库oracle、mysql
# 请选用一种，注释其它一种
##############################

# MySQL数据库（作者主力使用MySQL数据库，已经过充分测试，建议你首先MySQL）
jdbc.type=mysql
jdbc.driver=com.mysql.cj.jdbc.Driver
jdbc.url=jdbc:mysql://192.168.92.30:3306/shop-cn-2?useUnicode=true&characterEncoding=utf-8&useSSL=false
jdbc.username=root
jdbc.password=123456
# Mysql、mssql的测试SQL，可用于测试数据库是否联通
jdbc.testSql=SELECT 'x'

# Oracle 11G数据库（作者计划支持Oracle数据库，但还未充分测试，将会在新版本中不断完善）
#jdbc.type=oracle
#jdbc.driver=oracle.jdbc.driver.OracleDriver
#jdbc.url=jdbc:oracle:thin:@10.170.173.248:1521:orcl
#jdbc.username=shop2
#jdbc.password=my6297872
# Oracle的测试SQL，可用于测试数据库是否联通
#jdbc.testSql=SELECT 'x' FROM DUAL

# 通用数据库连接池配置
jdbc.pool.init=10
jdbc.pool.minIdle=50
jdbc.pool.maxActive=100

##############################
# redis缓存配置
# redis.password是密码，必须得有密码
##############################
redis.host=192.168.92.30
redis.port=6379
redis.password=123456
redis.dbIndex=5

##############################
# 产品名称与版本号设置
# jenkins构建时会读取fdp.p配置文件中的version=2.0.x版本号，关自动把x替换为编译号，用于Docker镜像的命名加入版本号。
# 版本号2.0.x中的x会在jenkins流水线打包时自动使用“编译流水号{BUILD_NUMBER}”替换
# 版本号格式采用 x.x.x 格式，意思是：[大架构升级].[小功能升级].[Bug修复]
##############################
productName=SiC B2B2C Shop
version=2.0.x

##############################
# solr搜索引擎 配置
##############################
#solr 单机模式（不依赖zookeeper） 优先
solr.url=http://192.168.92.42:8983/solr/

#solr 集群模式（依赖zookeeper）  不优先
#zookeeper的地址，向zk查询可用的solr集群服务器的节点列表
#solr.zk=192.168.92.30:9091

# 商品索引的名称，目前主力使用
solr.collectionName.product=product-cn
# 文章索引的名称，目前无用
solr.collectionName.article=xxx
# 店铺索引的名称，目前无用
solr.collectionName.store=xxx

##############################
# 路径相关配置
##############################

#前台基础路径，前台路径建议空达到url美观的目的，此路径下的controller都可匿名访问
frontPath=

#管理后台基础路径, 定期修改可起到隐藏管理后台的作用，能有限度的提高网站管理后台的安全。
adminPath=

#商家后台基础路径, 定期修改可起到隐藏商家后台的作用，能有限度的提高网站管理后台的安全。
sellerPath=/seller

#会员中心基础路径，会员中心的登录Filter就是拦截的这个路径，此路径下的controller都需要登录后访问
memberPath=/member

#sso基础路径
ssoPath=/sso

#wap系统基础路径
wapPath=

#upload系统基础路径
uploadPath=

#front系统模板的路径
#说明：admin系统可在线编辑模板，要跨系统的访问front系统的模板，需要配置这个绝对路径
#当未正确配置目录时，默认取出 当前web工程的/views目录的 绝对路径,做为临时的补充
#tplRootPath=/Users/zhaolei/Documents/dev/workspace4.6jee/shop-all/shop-web-seller/src/main/webapp/views
#建立软连接ln -s /Users/zhaolei/Documents/dev/workspace4.6jee/shop-all/shop-web-seller/src/main/webapp/views /shop/tpl
#win7以上系统也支持建立软连接
tplRootPath=/shop/tpl

#激活邮箱接口的url
activationUrl = /sso/email/activeMail.htm

##############################
# spring mvc 相关配置
##############################

#管理后台、前台、买家中心、商家后台的session会话超时设置
#如何想修改管理后台、前台、买家中心、商家后台的session的有效期，可修改这里。
#管理后台、前台、买家中心、商家后台，因为使用shiro来管理权限、用户、登录，Session过期时间也由shiro管理请修改"fdp.properties" 文件 "session.sessionTimeout" 参数.单位：毫秒，30分钟=1800000毫秒
#对未使用shiro的子系统有效(如wap\upload\static),需要去web.xml文件中配置。时间单位是分钟，并且只能是整数，如果是零或负数会话就永远不会超时
session.sessionTimeout=1800000

#管理后台是否允许多账号同时登录
multiAccountLogin.admin=true

#商家后台是否允许多账号同时登录
multiAccountLogin.sso=true

#网站前台首页路径,当访问域名时，转入这个controller
web.view.index=/index

#视图文件存放路径
web.view.prefix=/views/
web.view.suffix=.jsp

#最大文件上传限制，单位字节. 50M=50*1024*1024(B)=52428800 bytes
web.maxUploadSize=52428800

#静态文件后缀
web.staticFile=.css,.js,.png,.jpg,.gif,.jpeg,.bmp,.ico,.swf,.psd,.htc,.html,.crx,.xpi,.exe,.ipa,.apk

#分页配置，-1表示不分页
page.pageSize=20

#网站前台、会员中心的URL后缀。
urlSuffix=.htm

##############################
# 文件存储模块的 配置
##############################
#访问“安全区”中存储的文件，需要使用密码
#请输入长度大于8，数字与字母的混合
#系统上线时，建议人工随机修改本值，只修改这里一处就可，不建议使用默认密码。
filestorage.password=djei3934dd33f83

# 文件存储--图片地址统一前缀
#图片地址URL示例：http://127.0.0.1/upload/filestorage/15/16/39/b5808f706f7e43af9b79ff9dfe04141b.jpg@170x170
#com.sicheng.upload.filedownload.FileStorageDownloadServlet会拦截/filestorage/* 访问，来处理所以图片的下载和缩图请求
#要求：/filestorage后面不要以/结尾,如若修改，请同步修改web.xml中的FileStorageDownloadServlet中拦截路径/filestorage/*
#同时若使用FileStorageLocalFile作为存储的实现类，filestorage.dir值是文件在本地存储目录名
filestorage.dir=/filestorage

#可改变filestorage.dir目录的起始位置。
#当使用使用FileStorageLocalFile作为存储的实现类时，userfiles.basedir有用。
#当使用FileStorageAliyunOss做为存储的实现时，userfiles.basedir无用。
#一般在生产环境，需要通过本配置，把图片存储在tomcat容器以外，达到防止被覆盖的目的。
#要求：值可以是/开头，程序会自动在结尾加/。值中不允许包含“userfiles”、“filestorage”关键字
#要求：值可以为空。
#若为空，filestorage.dir目录被放在在tomcat的webapps中的web工程目录下
#若不为空，filestorage.dir目录被放在指定位置
#示例：userfiles.basedir=D:/fdp ，filestorage.dir目录被放在  D:/fdp/filestorage (windows系统)
#示例：userfiles.basedir=/fdp ，filestorage.dir目录被放在  /fdp/filestorage  （Linux系统）
#生产环境建议值不为空。开发环境建议值为空
#userfiles.basedir=/upload_file

# 图片存储配置--阿里云OSS存储（多选一）
# 当使用FileStorageAliyunOss做为存储的实现时，需要使用以下配置
#【图片存储业务需要使用此配置】
fileStorage.aliOss.accessKeyId=accessKeyId
fileStorage.aliOss.accessKeySecret=accessKeySecret
fileStorage.aliOss.endpoint=http://oss-cn-beijing.aliyuncs.com
fileStorage.aliOss.bucketName=shop-b01
fileStorage.aliOss.folder=shopImage1

# 图片存储配置--自建Minio存储（多选一）
# Minio自建了一个S3对象储存,Minio 是个基于 Golang 编写的开源对象存储套件,它兼容亚马逊S3云存储服务接口。使用 Amazon S3 v2 / v4 API。
# 当使用FileStorageMinio做为存储的实现时，需要使用以下配置
#【图片存储业务需要使用此配置】
fileStorage.Minio.accessKeyId=VUCSnrxNA2C0TitDla3K
fileStorage.Minio.accessKeySecret=heniPzz5FaT4f33DQHwt514KChNrll8w15HdM6b0
fileStorage.Minio.endpoint=http://192.168.92.42:9600
fileStorage.Minio.bucketName=shop-b01
fileStorage.Minio.folder=shopImage1


##############################
# 短信、邮件 配置
##############################
#线程池
threadpool.core_pool_size=5
threadpool.max_pool_size=15
threadpool.queue_capacity=50000
threadpool.keep_alive_seconds=60

#邮件设置
mail.smtp.auth=true
mail.smtp.timeout=25000
mail.smtp.starttls.enable=false

#阿里大鱼短信验证码模板id
templateCode=SMS_60155569

##############################
# 平台佣金 配置
# 下单时需要计算佣金，平台支持三种佣金计算方式
# 1：无佣金，2：根据商品分类计算佣金，3：根据店铺计算佣金
# 默认是1无佣金
##############################
trade.commissionType=0

##############################
# 微信支付的证书
##############################
#使用apiclient_cert.p12商户证书去退款，请替换为你的证书文件
#路径：shop-web-admin/src/main/webapp/WEB-INF/apiclient_cert.p12
wx_payCert=/WEB-INF/apiclient_cert.p12

##############################
# 微信公众号的唯一标识（xx环境）
##############################
wx_appid=wx4e1axxxxxxxxxxxxxxxxxxxxxx
wx_secret=60a4e87f7xxxxxxxxxxxxxxxxxxxxxxxxx
wx_redirect_url=http://demoxxxxxxxxxxxxxxxxxxxxxxxxxxxx
wx_partner=1396xxxxxxxxxxxxxxxxxxxxxxxxx
wx_paternerKey=qwertyxxxxxxxxxxxxxxxxxxxxxxxxx
wx_notifyurl=http://demoxxxxxxxxxxxxxxxxxxxxxxxxx

##############################
# 移动端相关设置
##############################
#AppToken的默认有效期,单位:天
app.AppToken.def_valid_date=90

##############################
# App消息推送配置
##############################
sc_app_id=VF3LB3fxxxxxxxxxxxxxxxx
sc_app_key=CsJlUyTxxxxxxxxxxxxxxxxxx
sc_master_secret=PNuLDxxxxxxxxxxxxxxxxxxxxxxxxxxxx

##############################
# 移动端api接口相关设置
# 移动端调用服务端api接口，已使用签名技术来保证接口的安全
##############################
#签名与验签时使用的“盐”
wap.api.sign=tianwanggaidihu

##############################
# 商城开关配置
##############################
#在线支付的开启与关闭：0关闭、1开启
#开启后，下单要走支持流程。
#关闭后，下单会会跳过支持这一步，继续走持续流程。这是给英文商城不支持在线支付的目标准备的。只有英文商城会“关闭”本开关
sys.pay.switch=1

##############################
# 默认语言
##############################
#默认语言--英文
#sys.defaultLocale=en_us
#默认语言--中文
sys.defaultLocale=zh_CN

##############################
# 选择“前台”使用的模板
# front系统就是商城的“前台”，“前台”可以定制多套模板，不同业务的商城使用具有行业特色的模板文件。
# 例如：中文通用商城，就可使用default目录下的模板文件，这也是本系统的默认模板。
# 例如：英文通用商城，就可使用english目录下的模板文件，适用于海外贸易场景。
# 例如：汽配商城，就要定制一套符合汽配行业风格的模板
# 例如：工业商城，就要定制一套符合工业行业风格的模板
# 当单机部署时，模板文件可以简单的放在war包中的。
# 当集群部署时，模板文件要集中存放在NFS共享文件夹上,多个节点都访问NFS共享文件夹中的模板文件，达到编辑、读取全局一份模板文件的目标。

# 父子模板特性说明：
# 本商城的front系统，支持多套模板、支持父子模板。
# default是系统自带的模板，qiche、demo是为某个客户、某个行业定制的模板。
#
# 如何定制行业模板
# default默认模板包含shop的front系统所有功能页面的模板文件，共有31个模板文件数量较多。
# 当你计划为某客户定制一套汽配行业风格模板时，一般经过需求分析，只需要重写几个“有变化”页面的模板文件就可，而不需要重写default目录中所有的31个模板文件，这样简化了制作一套新模板的工作量。
# 例如，经过分析汽配行业只要重写7个模板文件，如：大首页、搜索结果页、商品详情页、店铺首页、店铺列表页、登录页、注册页，就可满足业务方的要求。
# 做法：在front文件下，创建qiche文件夹，由页面设计制作人员，制作以上7个文件，并使用"shop标签库"替换模板中的动态数据，模板制做工作就完成了，靖保持模板文件名不变就系统可找到新模板文件。
# 当来自互联网的用户访问“大首页”时，先从qiche文件夹下找"大首页"模板，一定能找到因为前面定制了"大首页"模板，并且是汽配行业风格的模板。
# 当用户访问“确认订单”页时，先从qiche文件夹下找模板文件，一定是找不到的，因为没有定制。系统会再到default目录下查找，由于default下包含所有模板文件，一定能找到就可正常展示页面了。
#
# 原理
# 系统加载模板时，子资源加载器 继承了 父资源加载器的所有模板 ，系统优先从子加载器查找模板文件，找到了就使用这个子模板文件并结束。
# 若未找到，再从父加载器查找模板文件(default目录)，若找到了就使用这个父模板文件并结束，若未找模板文件到就返回404并结束。
# Beetl 父子资源加载器的实现类是ShopResourceLoader。
##############################
#父模板路径,中文商城要使用default目录下的模板文件（系统默认）
sys.front.parentTemplate=/views/front/default

#子模板路径,中文商城要配置一个不存在的路径
sys.front.childTemplate=/views/front/notTemplate

##############################
# 是否是英文版商城：0否1是
##############################
sys.isEnglish=0

##############################
# 定时对账
##############################
#对账失败次数，超过失败次数，放入差错池中
task.failTimes=5