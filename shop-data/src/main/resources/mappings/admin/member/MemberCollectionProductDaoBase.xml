<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.member.dao.MemberCollectionProductDao">
 	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值2天 -->
	</cache>
	<!-- 全部字段 -->
	<sql id="memberCollectionProductColumns">
	<trim suffixOverrides=",">
		a.collection_id AS "collectionId",                                   <!-- 主键 bigint(20)-->
		a.u_id AS "uId",                                                     <!-- 关联(会员表) bigint(20)-->
		a.p_id AS "pId",                                                     <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
		a.image AS "image",                                                  <!-- 封面图path，冗余 nvarchar2(64)-->
		a.picture_name AS "pictureName",                                     <!-- 商品名称 nvarchar2(64)-->
		a.picture_price AS "picturePrice",                                   <!-- 商品价格(取SKU中最低价) number(12,3)-->
		a.create_date AS "createDate",                                       <!-- 创建时间 date(7)-->
		a.update_date AS "updateDate",                                       <!-- 更新时间 date(7)-->
		a.bak1 AS "bak1",                                                    <!-- 备用字段1 nvarchar2(64)-->
		a.bak2 AS "bak2",                                                    <!-- 备用字段2 nvarchar2(64)-->
		a.bak3 AS "bak3",                                                    <!-- 备用字段3 nvarchar2(64)-->
		a.bak4 AS "bak4",                                                    <!-- 备用字段4 nvarchar2(64)-->
		a.bak5 AS "bak5",                                                    <!-- 备用字段5 nvarchar2(64)-->
		a.status AS "status",                                                <!-- 0、下架，1、上架 char(1)-->
		a.month_sales AS "monthSales",                                       <!-- 月销 bigint(20)-->

	</trim>
	</sql>

	<!-- 关联表 -->
	<sql id="memberCollectionProductJoins">
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.collectionId != null ">AND a.collection_id = #{c.collectionId}</if>
		<if test="c.uId != null ">AND a.u_id = #{c.uId}</if>
		<if test="c.pId != null ">AND a.p_id = #{c.pId}</if>
		<if test="c.image != null and c.image != ''">AND a.image = #{c.image}</if>
		<if test="c.pictureName != null and c.pictureName != ''">AND a.picture_name = #{c.pictureName}</if>
		<if test="c.picturePrice != null ">AND a.picture_price = #{c.picturePrice}</if>
		<if test="c.beginCreateDate != null and c.endCreateDate != null ">AND a.create_date BETWEEN #{c.beginCreateDate} AND #{c.endCreateDate}</if>
		<if test="c.beginUpdateDate != null and c.endUpdateDate != null ">AND a.update_date BETWEEN #{c.beginUpdateDate} AND #{c.endUpdateDate}</if>
		<if test="c.bak1 != null and c.bak1 != ''">AND a.bak1 = #{c.bak1}</if>
		<if test="c.bak2 != null and c.bak2 != ''">AND a.bak2 = #{c.bak2}</if>
		<if test="c.bak3 != null and c.bak3 != ''">AND a.bak3 = #{c.bak3}</if>
		<if test="c.bak4 != null and c.bak4 != ''">AND a.bak4 = #{c.bak4}</if>
		<if test="c.bak5 != null and c.bak5 != ''">AND a.bak5 = #{c.bak5}</if>
		<if test="c.status != null and c.status != ''">AND a.status = #{c.status}</if>
		<if test="c.monthSales != null ">AND a.month_sales = #{c.monthSales}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="MemberCollectionProduct">
		SELECT 
		<include refid="memberCollectionProductColumns"/>
		FROM member_collection_product a
		<include refid="memberCollectionProductJoins"/>
		WHERE a.collection_id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="MemberCollectionProduct">
		SELECT 
		<include refid="memberCollectionProductColumns"/>
		FROM member_collection_product a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.collection_id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="MemberCollectionProduct">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="memberCollectionProductColumns"/>
		FROM member_collection_product a
		<include refid="memberCollectionProductJoins"/>
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.collection_id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="MemberCollectionProduct">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="memberCollectionProductColumns"/>
		FROM member_collection_product a
		<include refid="memberCollectionProductJoins"/>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.collection_id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.collectionId" keyColumn="collection_id" useGeneratedKeys="true">
		INSERT INTO member_collection_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			collection_id,                                     <!-- 主键 bigint(20)-->
			u_id,                                              <!-- 关联(会员表) bigint(20)-->
			p_id,                                              <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			image,                                             <!-- 封面图path，冗余 nvarchar2(64)-->
			picture_name,                                      <!-- 商品名称 nvarchar2(64)-->
			picture_price,                                     <!-- 商品价格(取SKU中最低价) number(12,3)-->
			create_date,                                       <!-- 创建时间 date(7)-->
			update_date,                                       <!-- 更新时间 date(7)-->
			bak1,                                              <!-- 备用字段1 nvarchar2(64)-->
			bak2,                                              <!-- 备用字段2 nvarchar2(64)-->
			bak3,                                              <!-- 备用字段3 nvarchar2(64)-->
			bak4,                                              <!-- 备用字段4 nvarchar2(64)-->
			bak5,                                              <!-- 备用字段5 nvarchar2(64)-->
			status,                                            <!-- 0、下架，1、上架 char(1)-->
			month_sales,                                       <!-- 月销 bigint(20)-->

		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">#{entity.collectionId},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">member_collection_product_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.uId},                                     <!-- 关联(会员表) bigint(20)-->
			#{entity.pId},                                     <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			#{entity.image},                                   <!-- 封面图path，冗余 nvarchar2(64)-->
			#{entity.pictureName},                             <!-- 商品名称 nvarchar2(64)-->
			#{entity.picturePrice},                            <!-- 商品价格(取SKU中最低价) number(12,3)-->
			#{entity.createDate},                              <!-- 创建时间 date(7)-->
			#{entity.updateDate},                              <!-- 更新时间 date(7)-->
			#{entity.bak1},                                    <!-- 备用字段1 nvarchar2(64)-->
			#{entity.bak2},                                    <!-- 备用字段2 nvarchar2(64)-->
			#{entity.bak3},                                    <!-- 备用字段3 nvarchar2(64)-->
			#{entity.bak4},                                    <!-- 备用字段4 nvarchar2(64)-->
			#{entity.bak5},                                    <!-- 备用字段5 nvarchar2(64)-->
			#{entity.status},                                  <!-- 0、下架，1、上架 char(1)-->
			#{entity.monthSales},                              <!-- 月销 bigint(20)-->

	</trim>
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.collectionId" keyColumn="collection_id" useGeneratedKeys="true">
		INSERT INTO member_collection_product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.collectionId != null">collection_id,</if></if>
			<if test="entity.pkMode==2">collection_id,</if>
			<if test="entity.uId != null">u_id,</if>                                           <!-- 关联(会员表) bigint(20)-->
			<if test="entity.pId != null">p_id,</if>                                           <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			<if test="entity.image != null">image,</if>                                        <!-- 封面图path，冗余 nvarchar2(64)-->
			<if test="entity.pictureName != null">picture_name,</if>                           <!-- 商品名称 nvarchar2(64)-->
			<if test="entity.picturePrice != null">picture_price,</if>                         <!-- 商品价格(取SKU中最低价) number(12,3)-->
			<if test="entity.createDate != null">create_date,</if>                             <!-- 创建时间 date(7)-->
			<if test="entity.updateDate != null">update_date,</if>                             <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">bak1,</if>                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2,</if>                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3,</if>                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4,</if>                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5,</if>                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.status != null">status,</if>                                      <!-- 0、下架，1、上架 char(1)-->
			<if test="entity.monthSales != null">month_sales,</if>                             <!-- 月销 bigint(20)-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.collectionId != null">#{entity.collectionId},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">member_collection_product_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.uId != null">#{entity.uId},</if>                                            <!-- 关联(会员表) bigint(20)-->
			<if test="entity.pId != null">#{entity.pId},</if>                                            <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			<if test="entity.image != null">#{entity.image},</if>                                        <!-- 封面图path，冗余 nvarchar2(64)-->
			<if test="entity.pictureName != null">#{entity.pictureName},</if>                            <!-- 商品名称 nvarchar2(64)-->
			<if test="entity.picturePrice != null">#{entity.picturePrice},</if>                          <!-- 商品价格(取SKU中最低价) number(12,3)-->
			<if test="entity.createDate != null">#{entity.createDate},</if>                              <!-- 创建时间 date(7)-->
			<if test="entity.updateDate != null">#{entity.updateDate},</if>                              <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">#{entity.bak1},</if>                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">#{entity.bak2},</if>                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">#{entity.bak3},</if>                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">#{entity.bak4},</if>                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">#{entity.bak5},</if>                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.status != null">#{entity.status},</if>                                      <!-- 0、下架，1、上架 char(1)-->
			<if test="entity.monthSales != null">#{entity.monthSales},</if>                              <!-- 月销 bigint(20)-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE member_collection_product 
		<set>
			u_id = #{entity.uId},                                           <!-- 关联(会员表) bigint(20)-->
			p_id = #{entity.pId},                                           <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			image = #{entity.image},                                        <!-- 封面图path，冗余 nvarchar2(64)-->
			picture_name = #{entity.pictureName},                           <!-- 商品名称 nvarchar2(64)-->
			picture_price = #{entity.picturePrice},                         <!-- 商品价格(取SKU中最低价) number(12,3)-->
			create_date = #{entity.createDate},                             <!-- 创建时间 date(7)-->
			update_date = #{entity.updateDate},                             <!-- 更新时间 date(7)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段1 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段2 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段3 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段4 nvarchar2(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段5 nvarchar2(64)-->
			status = #{entity.status},                                      <!-- 0、下架，1、上架 char(1)-->
			month_sales = #{entity.monthSales},                             <!-- 月销 bigint(20)-->

		</set>
		WHERE collection_id = #{entity.collectionId}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE member_collection_product a 
		<set>
			u_id = #{entity.uId},                                           <!-- 关联(会员表) bigint(20)-->
			p_id = #{entity.pId},                                           <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			image = #{entity.image},                                        <!-- 封面图path，冗余 nvarchar2(64)-->
			picture_name = #{entity.pictureName},                           <!-- 商品名称 nvarchar2(64)-->
			picture_price = #{entity.picturePrice},                         <!-- 商品价格(取SKU中最低价) number(12,3)-->
			create_date = #{entity.createDate},                             <!-- 创建时间 date(7)-->
			update_date = #{entity.updateDate},                             <!-- 更新时间 date(7)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段1 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段2 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段3 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段4 nvarchar2(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段5 nvarchar2(64)-->
			status = #{entity.status},                                      <!-- 0、下架，1、上架 char(1)-->
			month_sales = #{entity.monthSales},                             <!-- 月销 bigint(20)-->

		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE member_collection_product
		<set>
			<if test="entity.uId != null">u_id = #{entity.uId},</if>                                                            <!-- 关联(会员表) bigint(20)-->
			<if test="entity.pId != null">p_id = #{entity.pId},</if>                                                            <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			<if test="entity.image != null">image = #{entity.image},</if>                                                       <!-- 封面图path，冗余 nvarchar2(64)-->
			<if test="entity.pictureName != null">picture_name = #{entity.pictureName},</if>                                    <!-- 商品名称 nvarchar2(64)-->
			<if test="entity.picturePrice != null">picture_price = #{entity.picturePrice},</if>                                 <!-- 商品价格(取SKU中最低价) number(12,3)-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- 创建时间 date(7)-->
			<if test="entity.updateDate != null">update_date = #{entity.updateDate},</if>                                       <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.status != null">status = #{entity.status},</if>                                                    <!-- 0、下架，1、上架 char(1)-->
			<if test="entity.monthSales != null">month_sales = #{entity.monthSales},</if>                                       <!-- 月销 bigint(20)-->
		</set>
		WHERE collection_id = #{entity.collectionId}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE member_collection_product a
		<set>
			<if test="entity.uId != null">u_id = #{entity.uId},</if>                                                            <!-- 关联(会员表) bigint(20)-->
			<if test="entity.pId != null">p_id = #{entity.pId},</if>                                                            <!-- 关联(商品SPU表)(SPU级别) bigint(20)-->
			<if test="entity.image != null">image = #{entity.image},</if>                                                       <!-- 封面图path，冗余 nvarchar2(64)-->
			<if test="entity.pictureName != null">picture_name = #{entity.pictureName},</if>                                    <!-- 商品名称 nvarchar2(64)-->
			<if test="entity.picturePrice != null">picture_price = #{entity.picturePrice},</if>                                 <!-- 商品价格(取SKU中最低价) number(12,3)-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- 创建时间 date(7)-->
			<if test="entity.updateDate != null">update_date = #{entity.updateDate},</if>                                       <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.status != null">status = #{entity.status},</if>                                                    <!-- 0、下架，1、上架 char(1)-->
			<if test="entity.monthSales != null">month_sales = #{entity.monthSales},</if>                                       <!-- 月销 bigint(20)-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM member_collection_product
		WHERE collection_id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM member_collection_product
		<where>
			<choose>
				<when test="list != null and list.size >0">
					collection_id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM member_collection_product a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM member_collection_product a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>

</mapper>