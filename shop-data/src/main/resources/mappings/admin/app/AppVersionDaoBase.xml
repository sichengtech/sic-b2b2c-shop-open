<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.app.dao.AppVersionDao">
	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值2天 -->
	</cache>
	<!-- 全部字段 -->
	<sql id="appVersionColumns">
	<trim suffixOverrides=",">
		a.id AS "id",                                                        <!-- 主键 bigint(20)-->
		a.version AS "version",                                              <!-- 版本号 varchar(32)-->
		a.type AS "type",                                                    <!-- 安装包类型：1为apk，2为wgt char(1)-->
		a.is_new_version AS "isNewVersion",                                  <!-- 是否为最新版本：0为否，1为是 char(1)-->
		a.download_path AS "downloadPath",                                   <!-- 下载路径 varchar(255)-->
		a.explain AS "explain",                                              <!-- 版本说明 varchar(255)-->
		a.update_date AS "updateDate",                                       <!-- 更新时间 datetime-->
		a.create_date AS "createDate",                                       <!-- 创建时间（兼发布时间） datetime-->
		a.bak1 AS "bak1",                                                    <!-- 备用字段1 varchar(64)-->
		a.bak2 AS "bak2",                                                    <!-- 备用字段2 varchar(64)-->
		a.bak3 AS "bak3",                                                    <!-- 备用字段3 varchar(64)-->
		a.bak4 AS "bak4",                                                    <!-- 备用字段4 varchar(64)-->
		a.bak5 AS "bak5",                                                    <!-- 备用字段5 varchar(64)-->

	</trim>
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.id != null ">AND a.id = #{c.id}</if>
		<if test="c.version != null and c.version != ''">AND a.version = #{c.version}</if>
		<if test="c.type != null and c.type != ''">AND a.type = #{c.type}</if>
		<if test="c.isNewVersion != null and c.isNewVersion != ''">AND a.is_new_version = #{c.isNewVersion}</if>
		<if test="c.downloadPath != null and c.downloadPath != ''">AND a.download_path = #{c.downloadPath}</if>
		<if test="c.explain != null and c.explain != ''">AND a.`explain` = #{c.explain}</if>
		<if test="c.beginUpdateDate != null and c.endUpdateDate != null ">AND a.update_date BETWEEN #{c.beginUpdateDate} AND #{c.endUpdateDate}</if>
		<if test="c.beginCreateDate != null and c.endCreateDate != null ">AND a.create_date BETWEEN #{c.beginCreateDate} AND #{c.endCreateDate}</if>
		<if test="c.bak1 != null and c.bak1 != ''">AND a.bak1 = #{c.bak1}</if>
		<if test="c.bak2 != null and c.bak2 != ''">AND a.bak2 = #{c.bak2}</if>
		<if test="c.bak3 != null and c.bak3 != ''">AND a.bak3 = #{c.bak3}</if>
		<if test="c.bak4 != null and c.bak4 != ''">AND a.bak4 = #{c.bak4}</if>
		<if test="c.bak5 != null and c.bak5 != ''">AND a.bak5 = #{c.bak5}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="AppVersion">
		SELECT 
		<include refid="appVersionColumns"/>
		FROM app_version a
		WHERE a.id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="AppVersion">
		SELECT 
		<include refid="appVersionColumns"/>
		FROM app_version a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="AppVersion">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="appVersionColumns"/>
		FROM app_version a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="AppVersion">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="appVersionColumns"/>
		FROM app_version a
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO app_version
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,                                                <!-- 主键 bigint(20)-->
			`version`,                                           <!-- 版本号 varchar(32)-->
			`type`,                                              <!-- 安装包类型：1为apk，2为wgt char(1)-->
			is_new_version,                                    <!-- 是否为最新版本：0为否，1为是 char(1)-->
			download_path,                                     <!-- 下载路径 varchar(255)-->
			`explain`,                                           <!-- 版本说明 varchar(255)-->
			update_date,                                       <!-- 更新时间 datetime-->
			create_date,                                       <!-- 创建时间（兼发布时间） datetime-->
			bak1,                                              <!-- 备用字段1 varchar(64)-->
			bak2,                                              <!-- 备用字段2 varchar(64)-->
			bak3,                                              <!-- 备用字段3 varchar(64)-->
			bak4,                                              <!-- 备用字段4 varchar(64)-->
			bak5,                                              <!-- 备用字段5 varchar(64)-->

		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">#{entity.id},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">app_version_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.version},                                 <!-- 版本号 varchar(32)-->
			#{entity.type},                                    <!-- 安装包类型：1为apk，2为wgt char(1)-->
			#{entity.isNewVersion},                            <!-- 是否为最新版本：0为否，1为是 char(1)-->
			#{entity.downloadPath},                            <!-- 下载路径 varchar(255)-->
			#{entity.explain},                                 <!-- 版本说明 varchar(255)-->
			#{entity.updateDate},                              <!-- 更新时间 datetime-->
			#{entity.createDate},                              <!-- 创建时间（兼发布时间） datetime-->
			#{entity.bak1},                                    <!-- 备用字段1 varchar(64)-->
			#{entity.bak2},                                    <!-- 备用字段2 varchar(64)-->
			#{entity.bak3},                                    <!-- 备用字段3 varchar(64)-->
			#{entity.bak4},                                    <!-- 备用字段4 varchar(64)-->
			#{entity.bak5},                                    <!-- 备用字段5 varchar(64)-->

	</trim>
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO app_version
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.id != null">id,</if></if>
			<if test="entity.pkMode==2">id,</if>
			<if test="entity.version != null">`version`,</if>                                    <!-- 版本号 varchar(32)-->
			<if test="entity.type != null">`type`,</if>                                          <!-- 安装包类型：1为apk，2为wgt char(1)-->
			<if test="entity.isNewVersion != null">is_new_version,</if>                        <!-- 是否为最新版本：0为否，1为是 char(1)-->
			<if test="entity.downloadPath != null">download_path,</if>                         <!-- 下载路径 varchar(255)-->
			<if test="entity.explain != null">`explain`,</if>                                    <!-- 版本说明 varchar(255)-->
			<if test="entity.updateDate != null">update_date,</if>                             <!-- 更新时间 datetime-->
			<if test="entity.createDate != null">create_date,</if>                             <!-- 创建时间（兼发布时间） datetime-->
			<if test="entity.bak1 != null">bak1,</if>                                          <!-- 备用字段1 varchar(64)-->
			<if test="entity.bak2 != null">bak2,</if>                                          <!-- 备用字段2 varchar(64)-->
			<if test="entity.bak3 != null">bak3,</if>                                          <!-- 备用字段3 varchar(64)-->
			<if test="entity.bak4 != null">bak4,</if>                                          <!-- 备用字段4 varchar(64)-->
			<if test="entity.bak5 != null">bak5,</if>                                          <!-- 备用字段5 varchar(64)-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.id != null">#{entity.id},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">app_version_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.version != null">#{entity.version},</if>                                    <!-- 版本号 varchar(32)-->
			<if test="entity.type != null">#{entity.type},</if>                                          <!-- 安装包类型：1为apk，2为wgt char(1)-->
			<if test="entity.isNewVersion != null">#{entity.isNewVersion},</if>                          <!-- 是否为最新版本：0为否，1为是 char(1)-->
			<if test="entity.downloadPath != null">#{entity.downloadPath},</if>                          <!-- 下载路径 varchar(255)-->
			<if test="entity.explain != null">#{entity.explain},</if>                                    <!-- 版本说明 varchar(255)-->
			<if test="entity.updateDate != null">#{entity.updateDate},</if>                              <!-- 更新时间 datetime-->
			<if test="entity.createDate != null">#{entity.createDate},</if>                              <!-- 创建时间（兼发布时间） datetime-->
			<if test="entity.bak1 != null">#{entity.bak1},</if>                                          <!-- 备用字段1 varchar(64)-->
			<if test="entity.bak2 != null">#{entity.bak2},</if>                                          <!-- 备用字段2 varchar(64)-->
			<if test="entity.bak3 != null">#{entity.bak3},</if>                                          <!-- 备用字段3 varchar(64)-->
			<if test="entity.bak4 != null">#{entity.bak4},</if>                                          <!-- 备用字段4 varchar(64)-->
			<if test="entity.bak5 != null">#{entity.bak5},</if>                                          <!-- 备用字段5 varchar(64)-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE app_version 
		<set>
			`version` = #{entity.version},                                    <!-- 版本号 varchar(32)-->
			`type` = #{entity.type},                                          <!-- 安装包类型：1为apk，2为wgt char(1)-->
			is_new_version = #{entity.isNewVersion},                        <!-- 是否为最新版本：0为否，1为是 char(1)-->
			download_path = #{entity.downloadPath},                         <!-- 下载路径 varchar(255)-->
			`explain` = #{entity.explain},                                    <!-- 版本说明 varchar(255)-->
			update_date = #{entity.updateDate},                             <!-- 更新时间 datetime-->
			create_date = #{entity.createDate},                             <!-- 创建时间（兼发布时间） datetime-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段1 varchar(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段2 varchar(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段3 varchar(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段4 varchar(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段5 varchar(64)-->

		</set>
		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE app_version a 
		<set>
			`version` = #{entity.version},                                    <!-- 版本号 varchar(32)-->
			`type` = #{entity.type},                                          <!-- 安装包类型：1为apk，2为wgt char(1)-->
			is_new_version = #{entity.isNewVersion},                        <!-- 是否为最新版本：0为否，1为是 char(1)-->
			download_path = #{entity.downloadPath},                         <!-- 下载路径 varchar(255)-->
			`explain` = #{entity.explain},                                    <!-- 版本说明 varchar(255)-->
			update_date = #{entity.updateDate},                             <!-- 更新时间 datetime-->
			create_date = #{entity.createDate},                             <!-- 创建时间（兼发布时间） datetime-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段1 varchar(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段2 varchar(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段3 varchar(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段4 varchar(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段5 varchar(64)-->

		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE app_version
		<set>
			<if test="entity.version != null">`version` = #{entity.version},</if>                                                 <!-- 版本号 varchar(32)-->
			<if test="entity.type != null">`type` = #{entity.type},</if>                                                          <!-- 安装包类型：1为apk，2为wgt char(1)-->
			<if test="entity.isNewVersion != null">is_new_version = #{entity.isNewVersion},</if>                                <!-- 是否为最新版本：0为否，1为是 char(1)-->
			<if test="entity.downloadPath != null">download_path = #{entity.downloadPath},</if>                                 <!-- 下载路径 varchar(255)-->
			<if test="entity.explain != null">`explain` = #{entity.explain},</if>                                                 <!-- 版本说明 varchar(255)-->
			<if test="entity.updateDate != null">update_date = #{entity.updateDate},</if>                                       <!-- 更新时间 datetime-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- 创建时间（兼发布时间） datetime-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段1 varchar(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段2 varchar(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段3 varchar(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段4 varchar(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段5 varchar(64)-->
		</set>
		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE app_version a
		<set>
			<if test="entity.version != null">`version` = #{entity.version},</if>                                                 <!-- 版本号 varchar(32)-->
			<if test="entity.type != null">`type` = #{entity.type},</if>                                                          <!-- 安装包类型：1为apk，2为wgt char(1)-->
			<if test="entity.isNewVersion != null">is_new_version = #{entity.isNewVersion},</if>                                <!-- 是否为最新版本：0为否，1为是 char(1)-->
			<if test="entity.downloadPath != null">download_path = #{entity.downloadPath},</if>                                 <!-- 下载路径 varchar(255)-->
			<if test="entity.explain != null">`explain` = #{entity.explain},</if>                                                 <!-- 版本说明 varchar(255)-->
			<if test="entity.updateDate != null">update_date = #{entity.updateDate},</if>                                       <!-- 更新时间 datetime-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- 创建时间（兼发布时间） datetime-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段1 varchar(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段2 varchar(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段3 varchar(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段4 varchar(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段5 varchar(64)-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM app_version
		WHERE id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM app_version
		<where>
			<choose>
				<when test="list != null and list.size >0">
					id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM app_version a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM app_version a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>

</mapper>