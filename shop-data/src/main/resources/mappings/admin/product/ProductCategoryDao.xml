<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.product.dao.ProductCategoryDao">

	<sql id="productCategoryColumnsChild">
		a.category_id AS "categoryId",
		a.category_img AS "categoryImg",
		a.name AS "name",
		a.parent_id AS "parent.id",
		a.parent_ids AS "parentIds",
		a.cate_level AS "cateLevel",
		a.sort AS "sort",
		a.type AS "type",
		a.is_locked AS "isLocked",
		a.commission AS "commission",
		a.recommend_spu AS "recommendSpu",
		a.brand_ids AS "brandIds",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.bak1 AS "bak1",
		a.bak2 AS "bak2",
		a.bak3 AS "bak3",
		a.bak4 AS "bak4",
		a.bak5 AS "bak5",
		a.bak6 AS "bak6",
		a.bak7 AS "bak7",
		a.bak8 AS "bak8",
		a.bak9 AS "bak9",
		a.bak10 AS "bak10",
		a.first_letter "firstLetter"
	</sql>
	
	<sql id="productCategoryJoinsChild">
	</sql>
	
	<select id="get" resultType="ProductCategory">
		SELECT 
			<include refid="productCategoryColumnsChild"/>
		FROM product_category a
		<include refid="productCategoryJoinsChild"/>
		WHERE a.category_id = #{categoryId}
	</select>
	
	<select id="findList" resultType="ProductCategory">
		SELECT 
			<include refid="productCategoryColumnsChild"/>
		FROM product_category a
		<include refid="productCategoryJoinsChild"/>
		<where>
			
			<if test="firstLetter != null and firstLetter != ''">
				AND a.first_letter = #{firstLetter}
			</if>
			<if test="categoryId != null and categoryId != ''">
				AND a.category_id = #{categoryId}
			</if>
			<if test="categoryImg != null and categoryImg != ''">
				AND a.category_img = #{categoryImg}
			</if>
			<if test="name != null and name != ''">
				<bind name="pattern" value="'%' + name + '%'" />				
				AND lower(a.name) LIKE lower(#{pattern})
			</if>
			<if test="parent != null and parent.id != null and parent.id != ''">
				AND a.parent_id = #{parent.id}
			</if>
			<if test="parentIds != null and parentIds != ''">
				<bind name="pattern" value="'%' + parentIds + '%'" />				
				AND lower(a.parent_ids) LIKE lower(#{pattern})
			</if>
			<if test="cateLevel != null and cateLevel != ''">
				AND a.cate_level = #{cateLevel}
			</if>
			<if test="sort != null and sort != ''">
				AND a.sort = #{sort}
			</if>
			<if test="type != null and type != ''">
				AND a.type = #{type}
			</if>
			<if test="isLocked != null and isLocked != ''">
				AND a.is_locked = #{isLocked}
			</if>
			<if test="commission != null and commission != ''">
				AND a.commission = #{commission}
			</if>
			<if test="recommendSpu != null and recommendSpu != ''">
				AND a.recommend_spu = #{recommendSpu}
			</if>
			<if test="brandIds != null and brandIds != ''">
				AND a.brand_ids = #{brandIds}
			</if>
			<if test="createBy != null and createBy.id != null and createBy.id != ''">
				AND a.create_by = #{createBy.id}
			</if>
			<if test="beginCreateDate != null and endCreateDate != null">
				AND a.create_date BETWEEN #{beginCreateDate} AND #{endCreateDate}
			</if>
			<if test="updateBy != null and updateBy.id != null and updateBy.id != ''">
				AND a.update_by = #{updateBy.id}
			</if>
			<if test="beginUpdateDate != null and endUpdateDate != null">
				AND a.update_date BETWEEN #{beginUpdateDate} AND #{endUpdateDate}
			</if>
			<if test="bak1 != null and bak1 != ''">
				AND a.bak1 = #{bak1}
			</if>
			<if test="bak2 != null and bak2 != ''">
				AND a.bak2 = #{bak2}
			</if>
			<if test="bak3 != null and bak3 != ''">
				AND a.bak3 = #{bak3}
			</if>
			<if test="bak4 != null and bak4 != ''">
				AND a.bak4 = #{bak4}
			</if>
			<if test="bak5 != null and bak5 != ''">
				AND a.bak5 = #{bak5}
			</if>
			<if test="bak6 != null and bak6 != ''">
				AND a.bak6 = #{bak6}
			</if>
			<if test="bak7 != null and bak7 != ''">
				AND a.bak7 = #{bak7}
			</if>
			<if test="bak8 != null and bak8 != ''">
				AND a.bak8 = #{bak8}
			</if>
			<if test="bak9 != null and bak9 != ''">
				AND a.bak9 = #{bak9}
			</if>
			<if test="bak10 != null and bak10 != ''">
				AND a.bak10 = #{bak10}
			</if>
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findAllList" resultType="ProductCategory">
		SELECT 
			<include refid="productCategoryColumnsChild"/>
		FROM product_category a
		<include refid="productCategoryJoinsChild"/>
		<where>
			
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<select id="findByParentIdsLike" resultType="ProductCategory">
		SELECT
			a.category_id,
			a.parent_id AS "parent.categoryId",
			a.parent_ids
		FROM product_category a
		<include refid="productCategoryJoinsChild"/>
		<where>
			AND lower(a.parent_ids) LIKE lower(#{parentIds})
		</where>
		ORDER BY a.sort ASC
	</select>
	
	<!-- <insert id="insert">
		INSERT INTO product_category(
			category_id,
			category_img,
			name,
			parent_id,
			parent_ids,
			cate_level,
			sort,
			type,
			is_locked,
			commission,
			recommend_spu,
			brand_ids,
			create_by,
			create_date,
			update_by,
			update_date,
			bak1,
			bak2,
			bak3,
			bak4,
			bak5,
			bak6,
			bak7,
			bak8,
			bak9,
			bak10,
			first_letter
		) VALUES (
			<if test="pkMode==1">#{categoryId},</if>
			<if test="pkMode==2">
				<if test="dbType$ == 'oracle'">product_category_seq.nextval,</if>
				<if test="dbType$ == 'mssql'">null,</if>
				<if test="dbType$ == 'mysql'">null,</if>
			</if>
			#{categoryImg},
			#{name},
			#{parent.id},
			#{parentIds},
			#{cateLevel},
			#{sort},
			#{type},
			#{isLocked},
			#{commission},
			#{recommendSpu},
			#{brandIds},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{bak1},
			#{bak2},
			#{bak3},
			#{bak4},
			#{bak5},
			#{bak6},
			#{bak7},
			#{bak8},
			#{bak9},
			#{bak10},
			#{firstLetter}
		)
	</insert> -->
	
	<update id="update">
		UPDATE product_category SET 	
			category_img = #{categoryImg},
			name = #{name},
			parent_id = #{parent.id},
			parent_ids = #{parentIds},
			cate_level = #{cateLevel},
			sort = #{sort},
			type = #{type},
			is_locked = #{isLocked},
			commission = #{commission},
			recommend_spu = #{recommendSpu},
			brand_ids = #{brandIds},
			create_by = #{createBy.id},
			create_date = #{createDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			bak1 = #{bak1},
			bak2 = #{bak2},
			bak3 = #{bak3},
			bak4 = #{bak4},
			bak5 = #{bak5},
			bak6 = #{bak6},
			bak7 = #{bak7},
			bak8 = #{bak8},
			bak9 = #{bak9},
			bak10 = #{bak10},
			first_letter = #{firstLetter}
		WHERE category_id = #{categoryId}
	</update>
	
	<update id="updateParentIds">
		UPDATE product_category SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds},
			type = #{type}
		WHERE category_id = #{categoryId}
	</update>
	
	<!-- <update id="delete">
		DELETE FROM product_category
		WHERE category_id = #{categoryId}
		<bind name="pattern" value="'%,' + categoryId + ',%'" />				
		OR lower(parent_ids) LIKE lower(#{pattern})
	</update> -->
	
	<!-- 根据id进行查询终极分类 -->
	<!-- <select id="isNoSubcategory" resultType="ProductCategory">
		SELECT 
			<include refid="productCategoryColumnsChild"/>
		FROM product_category a
		<include refid="productCategoryJoinsChild"/>
		WHERE
		<bind name="pattern" value="'%,' + categoryId + ',%'" />				
		a.parent_ids LIKE lower(#{pattern})
		and type = '2'
	</select>
	
	根据主键更新记录,只把非空的值更到对应的字段
	<update id="updateByIdT">
		UPDATE product_category
		<set>
			<if test="parent != null and parent.id != null and parent.id != ''">
				parent_id = #{parent.id},
			</if>
			<if test="name != null">name = #{name},</if>
			<if test="sort != null">sort = #{sort},</if>
			<if test="isLocked != null">is_locked = #{isLocked},</if>
			<if test="commission != null">commission = #{commission},</if>
			<if test="firstLetter != null">first_letter = #{firstLetter},</if>
			<if test="brandIds != null">brand_ids = #{brandIds},</if>
			<if test="type != null">type = #{type},</if>
		</set>
		WHERE category_id = #{categoryId}
	</update>
	
	根据条件更新记录,只把非空的值更到对应的字段
	<update id="updateByWhereT">
		UPDATE product_category
		<set>
			<if test="parent != null and parent.id != null and parent.id != ''">
				parent_id = #{parent.id},
			</if>
			<if test="name != null">name = #{name},</if>
			<if test="sort != null">sort = #{sort},</if>
			<if test="isLocked != null">is_locked = #{isLocked},</if>
			<if test="commission != null">commission = #{commission},</if>
			<if test="firstLetter != null">first_letter = #{firstLetter},</if>
			<if test="type != null">type = #{type},</if>
		</set>
		WHERE category_id = #{categoryId}
		<bind name="pattern" value="'%,' + categoryId + ',%'" />				
		OR lower(parent_ids) LIKE lower(#{pattern})
	</update>	
	
	查询是否有父类节点
	<select id="isNoParent" resultType="ProductCategory">
		SELECT 
			<include refid="productCategoryColumnsChild"/>
		FROM product_category a
		WHERE parent_id = #{categoryId}
		<bind name="pattern" value="'%,' + categoryId + ',%'" />				
		OR lower(parent_ids) LIKE lower(#{pattern})
	</select>
	
	更新所有父类节点的数据
	<update id="updateByParentIds">
		UPDATE product_category
		<set>
			<if test="type != null">type = #{type},</if>
		</set>
		WHERE parent_id = #{parentId} and category_id = #{categoryId}
	</update> -->
	
</mapper>