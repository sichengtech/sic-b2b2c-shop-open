<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.product.dao.ProductCategoryDao">
	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值2天 -->
	</cache>
	<!-- 全部字段 -->
	<sql id="productCategoryColumns">
	<trim suffixOverrides=",">
		a.category_id AS "categoryId",                                       <!-- 主键 bigint(20)-->
		a.category_img AS "categoryImg",                                     <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
		a.name AS "name",                                                    <!-- 类别名称 nvarchar2(64)-->
		a.parent_id AS "parent.id",                                          <!-- 父类id bigint(20)-->
		a.parent_ids AS "parentIds",                                         <!-- 所有父级标号 nvarchar2(1024)-->
		a.cate_level AS "cateLevel",                                         <!-- 类别层级 number(10)-->
		a.sort AS "sort",                                                    <!-- 排序 number(10)-->
		a.type AS "type",                                                    <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
		a.is_locked AS "isLocked",                                           <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
		a.commission AS "commission",                                        <!-- 分佣比例 number(12,3)-->
		a.recommend_spu AS "recommendSpu",                                   <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
		a.brand_ids AS "brandIds",                                           <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
		a.create_by AS "createBy.id",                                        <!-- 创建者 nvarchar2(64)-->
		a.create_date AS "createDate",                                       <!-- 创建时间 date(7)-->
		a.update_by AS "updateBy.id",                                        <!-- 更新者 nvarchar2(64)-->
		a.update_date AS "updateDate",                                       <!-- 更新时间 date(7)-->
		a.bak1 AS "bak1",                                                    <!-- 备用字段1 nvarchar2(64)-->
		a.bak2 AS "bak2",                                                    <!-- 备用字段2 nvarchar2(64)-->
		a.bak3 AS "bak3",                                                    <!-- 备用字段3 nvarchar2(64)-->
		a.bak4 AS "bak4",                                                    <!-- 备用字段4 nvarchar2(64)-->
		a.bak5 AS "bak5",                                                    <!-- 备用字段5 nvarchar2(64)-->
		a.bak6 AS "bak6",                                                    <!-- 备用字段6 nvarchar2(64)-->
		a.bak7 AS "bak7",                                                    <!-- 备用字段7 nvarchar2(64)-->
		a.bak8 AS "bak8",                                                    <!-- 备用字段8 nvarchar2(64)-->
		a.bak9 AS "bak9",                                                    <!-- 备用字段9 nvarchar2(64)-->
		a.bak10 AS "bak10",                                                  <!-- 备用字段10 nvarchar2(64)-->
		a.first_letter AS "firstLetter",                                     <!-- 分类名称首字母 nvarchar2(64)-->

	</trim>
	</sql>

	<!-- 关联表 -->
	<sql id="productCategoryJoins">
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.categoryId != null ">AND a.category_id = #{c.categoryId}</if>
		<if test="c.categoryImg != null and c.categoryImg != ''">AND a.category_img = #{c.categoryImg}</if>
		<if test="c.name != null and c.name != null ">AND a.name = #{c.name}</if>
		<if test="c.parent != null and c.parent.id != null ">AND a.parent_id = #{c.parent.id}</if>
		<if test="c.parentIds != null and c.parentIds != ''">				
			<bind name="pattern" value="'%' + c.parentIds + '%'" />				
			AND lower(a.parent_ids) LIKE lower(#{pattern})
		</if>
		<if test="c.cateLevel != null ">AND a.cate_level = #{c.cateLevel}</if>
		<if test="c.sort != null ">AND a.sort = #{c.sort}</if>
		<if test="c.type != null and c.type != ''">AND a.type = #{c.type}</if>
		<if test="c.isLocked != null and c.isLocked != ''">AND a.is_locked = #{c.isLocked}</if>
		<if test="c.commission != null ">AND a.commission = #{c.commission}</if>
		<if test="c.recommendSpu != null and c.recommendSpu != ''">AND a.recommend_spu = #{c.recommendSpu}</if>
		<if test="c.brandIds != null and c.brandIds != ''">AND a.brand_ids = #{c.brandIds}</if>
		<if test="c.createBy != null and c.createBy.id != null ">AND a.create_by = #{c.createBy.id}</if>
		<if test="c.beginCreateDate != null and c.endCreateDate != null ">AND a.create_date BETWEEN #{c.beginCreateDate} AND #{c.endCreateDate}</if>
		<if test="c.updateBy != null and c.updateBy.id != null ">AND a.update_by = #{c.updateBy.id}</if>
		<if test="c.beginUpdateDate != null and c.endUpdateDate != null ">AND a.update_date BETWEEN #{c.beginUpdateDate} AND #{c.endUpdateDate}</if>
		<if test="c.bak1 != null and c.bak1 != ''">AND a.bak1 = #{c.bak1}</if>
		<if test="c.bak2 != null and c.bak2 != ''">AND a.bak2 = #{c.bak2}</if>
		<if test="c.bak3 != null and c.bak3 != ''">AND a.bak3 = #{c.bak3}</if>
		<if test="c.bak4 != null and c.bak4 != ''">AND a.bak4 = #{c.bak4}</if>
		<if test="c.bak5 != null and c.bak5 != ''">AND a.bak5 = #{c.bak5}</if>
		<if test="c.bak6 != null and c.bak6 != ''">AND a.bak6 = #{c.bak6}</if>
		<if test="c.bak7 != null and c.bak7 != ''">AND a.bak7 = #{c.bak7}</if>
		<if test="c.bak8 != null and c.bak8 != ''">AND a.bak8 = #{c.bak8}</if>
		<if test="c.bak9 != null and c.bak9 != ''">AND a.bak9 = #{c.bak9}</if>
		<if test="c.bak10 != null and c.bak10 != ''">AND a.bak10 = #{c.bak10}</if>
		<if test="c.firstLetter != null and c.firstLetter != ''">AND a.first_letter = #{c.firstLetter}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="ProductCategory">
		SELECT 
		<include refid="productCategoryColumns"/>
		FROM product_category a
		<include refid="productCategoryJoins"/>
		WHERE a.category_id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="ProductCategory">
		SELECT
		<include refid="productCategoryColumns"/>
		FROM product_category a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.category_id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="ProductCategory">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="productCategoryColumns"/>
		FROM product_category a
		<include refid="productCategoryJoins"/>
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.category_id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="ProductCategory">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="productCategoryColumns"/>
		FROM product_category a
		<include refid="productCategoryJoins"/>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.category_id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.categoryId" keyColumn="category_id" useGeneratedKeys="true">
		INSERT INTO product_category
		<trim prefix="(" suffix=")" suffixOverrides=",">
			category_id,                                       <!-- 主键 bigint(20)-->
			category_img,                                      <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			name,                                              <!-- 类别名称 nvarchar2(64)-->
			parent_id,                                         <!-- 父类id bigint(20)-->
			parent_ids,                                        <!-- 所有父级标号 nvarchar2(1024)-->
			cate_level,                                        <!-- 类别层级 number(10)-->
			sort,                                              <!-- 排序 number(10)-->
			type,                                              <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			is_locked,                                         <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			commission,                                        <!-- 分佣比例 number(12,3)-->
			recommend_spu,                                     <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			brand_ids,                                         <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			create_by,                                         <!-- 创建者 nvarchar2(64)-->
			create_date,                                       <!-- 创建时间 date(7)-->
			update_by,                                         <!-- 更新者 nvarchar2(64)-->
			update_date,                                       <!-- 更新时间 date(7)-->
			bak1,                                              <!-- 备用字段1 nvarchar2(64)-->
			bak2,                                              <!-- 备用字段2 nvarchar2(64)-->
			bak3,                                              <!-- 备用字段3 nvarchar2(64)-->
			bak4,                                              <!-- 备用字段4 nvarchar2(64)-->
			bak5,                                              <!-- 备用字段5 nvarchar2(64)-->
			bak6,                                              <!-- 备用字段6 nvarchar2(64)-->
			bak7,                                              <!-- 备用字段7 nvarchar2(64)-->
			bak8,                                              <!-- 备用字段8 nvarchar2(64)-->
			bak9,                                              <!-- 备用字段9 nvarchar2(64)-->
			bak10,                                             <!-- 备用字段10 nvarchar2(64)-->
			first_letter,                                      <!-- 分类名称首字母 nvarchar2(64)-->

		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">#{entity.categoryId},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">product_category_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.categoryImg},                             <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			#{entity.name},                                    <!-- 类别名称 nvarchar2(64)-->
			#{entity.parent.id},                               <!-- 父类id bigint(20)-->
			#{entity.parentIds},                               <!-- 所有父级标号 nvarchar2(1024)-->
			#{entity.cateLevel},                               <!-- 类别层级 number(10)-->
			#{entity.sort},                                    <!-- 排序 number(10)-->
			#{entity.type},                                    <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			#{entity.isLocked},                                <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			#{entity.commission},                              <!-- 分佣比例 number(12,3)-->
			#{entity.recommendSpu},                            <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			#{entity.brandIds},                                <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			#{entity.createBy.id},                             <!-- 创建者 nvarchar2(64)-->
			#{entity.createDate},                              <!-- 创建时间 date(7)-->
			#{entity.updateBy.id},                             <!-- 更新者 nvarchar2(64)-->
			#{entity.updateDate},                              <!-- 更新时间 date(7)-->
			#{entity.bak1},                                    <!-- 备用字段1 nvarchar2(64)-->
			#{entity.bak2},                                    <!-- 备用字段2 nvarchar2(64)-->
			#{entity.bak3},                                    <!-- 备用字段3 nvarchar2(64)-->
			#{entity.bak4},                                    <!-- 备用字段4 nvarchar2(64)-->
			#{entity.bak5},                                    <!-- 备用字段5 nvarchar2(64)-->
			#{entity.bak6},                                    <!-- 备用字段6 nvarchar2(64)-->
			#{entity.bak7},                                    <!-- 备用字段7 nvarchar2(64)-->
			#{entity.bak8},                                    <!-- 备用字段8 nvarchar2(64)-->
			#{entity.bak9},                                    <!-- 备用字段9 nvarchar2(64)-->
			#{entity.bak10},                                   <!-- 备用字段10 nvarchar2(64)-->
			#{entity.firstLetter},                             <!-- 分类名称首字母 nvarchar2(64)-->

	</trim>
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.categoryId" keyColumn="category_id" useGeneratedKeys="true">
		INSERT INTO product_category
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.categoryId != null">category_id,</if></if>
			<if test="entity.pkMode==2">category_id,</if>
			<if test="entity.categoryImg != null">category_img,</if>                           <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			<if test="entity.name != null">name,</if>                                          <!-- 类别名称 nvarchar2(64)-->
			<if test="entity.parent!= null and entity.parent.id!= null ">parent_id,</if>                                <!-- 父类id bigint(20)-->
			<if test="entity.parentIds != null">parent_ids,</if>                               <!-- 所有父级标号 nvarchar2(1024)-->
			<if test="entity.cateLevel != null">cate_level,</if>                               <!-- 类别层级 number(10)-->
			<if test="entity.sort != null">sort,</if>                                          <!-- 排序 number(10)-->
			<if test="entity.type != null">type,</if>                                          <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			<if test="entity.isLocked != null">is_locked,</if>                                 <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			<if test="entity.commission != null">commission,</if>                              <!-- 分佣比例 number(12,3)-->
			<if test="entity.recommendSpu != null">recommend_spu,</if>                         <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			<if test="entity.brandIds != null">brand_ids,</if>                                 <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">create_by,</if>                              <!-- 创建者 nvarchar2(64)-->
			<if test="entity.createDate != null">create_date,</if>                             <!-- 创建时间 date(7)-->
			<if test="entity.updateBy!= null and entity.updateBy.id!= null ">update_by,</if>                              <!-- 更新者 nvarchar2(64)-->
			<if test="entity.updateDate != null">update_date,</if>                             <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">bak1,</if>                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2,</if>                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3,</if>                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4,</if>                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5,</if>                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.bak6 != null">bak6,</if>                                          <!-- 备用字段6 nvarchar2(64)-->
			<if test="entity.bak7 != null">bak7,</if>                                          <!-- 备用字段7 nvarchar2(64)-->
			<if test="entity.bak8 != null">bak8,</if>                                          <!-- 备用字段8 nvarchar2(64)-->
			<if test="entity.bak9 != null">bak9,</if>                                          <!-- 备用字段9 nvarchar2(64)-->
			<if test="entity.bak10 != null">bak10,</if>                                        <!-- 备用字段10 nvarchar2(64)-->
			<if test="entity.firstLetter != null">first_letter,</if>                           <!-- 分类名称首字母 nvarchar2(64)-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.categoryId != null">#{entity.categoryId},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">product_category_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.categoryImg != null">#{entity.categoryImg},</if>                            <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			<if test="entity.name != null">#{entity.name},</if>                                          <!-- 类别名称 nvarchar2(64)-->
			<if test="entity.parent!= null and entity.parent.id!= null ">#{entity.parent.id},</if>                                <!-- 父类id bigint(20)-->
			<if test="entity.parentIds != null">#{entity.parentIds},</if>                                <!-- 所有父级标号 nvarchar2(1024)-->
			<if test="entity.cateLevel != null">#{entity.cateLevel},</if>                                <!-- 类别层级 number(10)-->
			<if test="entity.sort != null">#{entity.sort},</if>                                          <!-- 排序 number(10)-->
			<if test="entity.type != null">#{entity.type},</if>                                          <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			<if test="entity.isLocked != null">#{entity.isLocked},</if>                                  <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			<if test="entity.commission != null">#{entity.commission},</if>                              <!-- 分佣比例 number(12,3)-->
			<if test="entity.recommendSpu != null">#{entity.recommendSpu},</if>                          <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			<if test="entity.brandIds != null">#{entity.brandIds},</if>                                  <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">#{entity.createBy.id},</if>                            <!-- 创建者 nvarchar2(64)-->
			<if test="entity.createDate != null">#{entity.createDate},</if>                              <!-- 创建时间 date(7)-->
			<if test="entity.updateBy!= null and entity.updateBy.id!= null ">#{entity.updateBy.id},</if>                            <!-- 更新者 nvarchar2(64)-->
			<if test="entity.updateDate != null">#{entity.updateDate},</if>                              <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">#{entity.bak1},</if>                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">#{entity.bak2},</if>                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">#{entity.bak3},</if>                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">#{entity.bak4},</if>                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">#{entity.bak5},</if>                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.bak6 != null">#{entity.bak6},</if>                                          <!-- 备用字段6 nvarchar2(64)-->
			<if test="entity.bak7 != null">#{entity.bak7},</if>                                          <!-- 备用字段7 nvarchar2(64)-->
			<if test="entity.bak8 != null">#{entity.bak8},</if>                                          <!-- 备用字段8 nvarchar2(64)-->
			<if test="entity.bak9 != null">#{entity.bak9},</if>                                          <!-- 备用字段9 nvarchar2(64)-->
			<if test="entity.bak10 != null">#{entity.bak10},</if>                                        <!-- 备用字段10 nvarchar2(64)-->
			<if test="entity.firstLetter != null">#{entity.firstLetter},</if>                            <!-- 分类名称首字母 nvarchar2(64)-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE product_category 
		<set>
			category_img = #{entity.categoryImg},                           <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			name = #{entity.name},                                          <!-- 类别名称 nvarchar2(64)-->
			parent_id = #{entity.parent.id},                                <!-- 父类id bigint(20)-->
			parent_ids = #{entity.parentIds},                               <!-- 所有父级标号 nvarchar2(1024)-->
			cate_level = #{entity.cateLevel},                               <!-- 类别层级 number(10)-->
			sort = #{entity.sort},                                          <!-- 排序 number(10)-->
			type = #{entity.type},                                          <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			is_locked = #{entity.isLocked},                                 <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			commission = #{entity.commission},                              <!-- 分佣比例 number(12,3)-->
			recommend_spu = #{entity.recommendSpu},                         <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			brand_ids = #{entity.brandIds},                                 <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			create_by = #{entity.createBy.id},                              <!-- 创建者 nvarchar2(64)-->
			create_date = #{entity.createDate},                             <!-- 创建时间 date(7)-->
			update_by = #{entity.updateBy.id},                              <!-- 更新者 nvarchar2(64)-->
			update_date = #{entity.updateDate},                             <!-- 更新时间 date(7)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段1 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段2 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段3 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段4 nvarchar2(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段5 nvarchar2(64)-->
			bak6 = #{entity.bak6},                                          <!-- 备用字段6 nvarchar2(64)-->
			bak7 = #{entity.bak7},                                          <!-- 备用字段7 nvarchar2(64)-->
			bak8 = #{entity.bak8},                                          <!-- 备用字段8 nvarchar2(64)-->
			bak9 = #{entity.bak9},                                          <!-- 备用字段9 nvarchar2(64)-->
			bak10 = #{entity.bak10},                                        <!-- 备用字段10 nvarchar2(64)-->
			first_letter = #{entity.firstLetter},                           <!-- 分类名称首字母 nvarchar2(64)-->

		</set>
		WHERE category_id = #{entity.categoryId}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE product_category a 
		<set>
			category_img = #{entity.categoryImg},                           <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			name = #{entity.name},                                          <!-- 类别名称 nvarchar2(64)-->
			parent_id = #{entity.parent.id},                                <!-- 父类id bigint(20)-->
			parent_ids = #{entity.parentIds},                               <!-- 所有父级标号 nvarchar2(1024)-->
			cate_level = #{entity.cateLevel},                               <!-- 类别层级 number(10)-->
			sort = #{entity.sort},                                          <!-- 排序 number(10)-->
			type = #{entity.type},                                          <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			is_locked = #{entity.isLocked},                                 <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			commission = #{entity.commission},                              <!-- 分佣比例 number(12,3)-->
			recommend_spu = #{entity.recommendSpu},                         <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			brand_ids = #{entity.brandIds},                                 <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			create_by = #{entity.createBy.id},                              <!-- 创建者 nvarchar2(64)-->
			create_date = #{entity.createDate},                             <!-- 创建时间 date(7)-->
			update_by = #{entity.updateBy.id},                              <!-- 更新者 nvarchar2(64)-->
			update_date = #{entity.updateDate},                             <!-- 更新时间 date(7)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段1 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段2 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段3 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段4 nvarchar2(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段5 nvarchar2(64)-->
			bak6 = #{entity.bak6},                                          <!-- 备用字段6 nvarchar2(64)-->
			bak7 = #{entity.bak7},                                          <!-- 备用字段7 nvarchar2(64)-->
			bak8 = #{entity.bak8},                                          <!-- 备用字段8 nvarchar2(64)-->
			bak9 = #{entity.bak9},                                          <!-- 备用字段9 nvarchar2(64)-->
			bak10 = #{entity.bak10},                                        <!-- 备用字段10 nvarchar2(64)-->
			first_letter = #{entity.firstLetter},                           <!-- 分类名称首字母 nvarchar2(64)-->

		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE product_category
		<set>
			<if test="entity.categoryImg != null">category_img = #{entity.categoryImg},</if>                                    <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			<if test="entity.name != null">name = #{entity.name},</if>                                                          <!-- 类别名称 nvarchar2(64)-->
			<if test="entity.parent!= null and entity.parent.id!= null ">parent_id = #{entity.parent.id},</if>                                           <!-- 父类id bigint(20)-->
			<if test="entity.parentIds != null">parent_ids = #{entity.parentIds},</if>                                          <!-- 所有父级标号 nvarchar2(1024)-->
			<if test="entity.cateLevel != null">cate_level = #{entity.cateLevel},</if>                                          <!-- 类别层级 number(10)-->
			<if test="entity.sort != null">sort = #{entity.sort},</if>                                                          <!-- 排序 number(10)-->
			<if test="entity.type != null">type = #{entity.type},</if>                                                          <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			<if test="entity.isLocked != null">is_locked = #{entity.isLocked},</if>                                             <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			<if test="entity.commission != null">commission = #{entity.commission},</if>                                        <!-- 分佣比例 number(12,3)-->
			<if test="entity.recommendSpu != null">recommend_spu = #{entity.recommendSpu},</if>                                 <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			<if test="entity.brandIds != null">brand_ids = #{entity.brandIds},</if>                                             <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">create_by = #{entity.createBy.id},</if>                                       <!-- 创建者 nvarchar2(64)-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- 创建时间 date(7)-->
			<if test="entity.updateBy!= null and entity.updateBy.id!= null ">update_by = #{entity.updateBy.id},</if>                                       <!-- 更新者 nvarchar2(64)-->
			<if test="entity.updateDate != null">update_date = #{entity.updateDate},</if>                                       <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.bak6 != null">bak6 = #{entity.bak6},</if>                                                          <!-- 备用字段6 nvarchar2(64)-->
			<if test="entity.bak7 != null">bak7 = #{entity.bak7},</if>                                                          <!-- 备用字段7 nvarchar2(64)-->
			<if test="entity.bak8 != null">bak8 = #{entity.bak8},</if>                                                          <!-- 备用字段8 nvarchar2(64)-->
			<if test="entity.bak9 != null">bak9 = #{entity.bak9},</if>                                                          <!-- 备用字段9 nvarchar2(64)-->
			<if test="entity.bak10 != null">bak10 = #{entity.bak10},</if>                                                       <!-- 备用字段10 nvarchar2(64)-->
			<if test="entity.firstLetter != null">first_letter = #{entity.firstLetter},</if>                                    <!-- 分类名称首字母 nvarchar2(64)-->
		</set>
		WHERE category_id = #{entity.categoryId}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE product_category a
		<set>
			<if test="entity.categoryImg != null">category_img = #{entity.categoryImg},</if>                                    <!-- 分类导航图标（只有在层级为0的情况下有图片地址） nvarchar2(64)-->
			<if test="entity.name != null">name = #{entity.name},</if>                                                          <!-- 类别名称 nvarchar2(64)-->
			<if test="entity.parent!= null and entity.parent.id!= null ">parent_id = #{entity.parent.id},</if>                                           <!-- 父类id bigint(20)-->
			<if test="entity.parentIds != null">parent_ids = #{entity.parentIds},</if>                                          <!-- 所有父级标号 nvarchar2(1024)-->
			<if test="entity.cateLevel != null">cate_level = #{entity.cateLevel},</if>                                          <!-- 类别层级 number(10)-->
			<if test="entity.sort != null">sort = #{entity.sort},</if>                                                          <!-- 排序 number(10)-->
			<if test="entity.type != null">type = #{entity.type},</if>                                                          <!-- 类型：1父级分类、2终极分类、3超连接分类 char(1)-->
			<if test="entity.isLocked != null">is_locked = #{entity.isLocked},</if>                                             <!-- 是否锁定(1锁定,0未锁),锁定后不显示，不能向本分类下发商品 char(1)-->
			<if test="entity.commission != null">commission = #{entity.commission},</if>                                        <!-- 分佣比例 number(12,3)-->
			<if test="entity.recommendSpu != null">recommend_spu = #{entity.recommendSpu},</if>                                 <!-- 推荐SPU（为商品id，多个值用豆号分隔） nvarchar2(255)-->
			<if test="entity.brandIds != null">brand_ids = #{entity.brandIds},</if>                                             <!-- 绑定的品牌（为品牌id，多个值用豆号分隔） nvarchar2(1024)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">create_by = #{entity.createBy.id},</if>                                       <!-- 创建者 nvarchar2(64)-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- 创建时间 date(7)-->
			<if test="entity.updateBy!= null and entity.updateBy.id!= null ">update_by = #{entity.updateBy.id},</if>                                       <!-- 更新者 nvarchar2(64)-->
			<if test="entity.updateDate != null">update_date = #{entity.updateDate},</if>                                       <!-- 更新时间 date(7)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段1 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段2 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段3 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段4 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段5 nvarchar2(64)-->
			<if test="entity.bak6 != null">bak6 = #{entity.bak6},</if>                                                          <!-- 备用字段6 nvarchar2(64)-->
			<if test="entity.bak7 != null">bak7 = #{entity.bak7},</if>                                                          <!-- 备用字段7 nvarchar2(64)-->
			<if test="entity.bak8 != null">bak8 = #{entity.bak8},</if>                                                          <!-- 备用字段8 nvarchar2(64)-->
			<if test="entity.bak9 != null">bak9 = #{entity.bak9},</if>                                                          <!-- 备用字段9 nvarchar2(64)-->
			<if test="entity.bak10 != null">bak10 = #{entity.bak10},</if>                                                       <!-- 备用字段10 nvarchar2(64)-->
			<if test="entity.firstLetter != null">first_letter = #{entity.firstLetter},</if>                                    <!-- 分类名称首字母 nvarchar2(64)-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM product_category
		WHERE category_id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM product_category
		<where>
			<choose>
				<when test="list != null and list.size >0">
					category_id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM product_category a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM product_category a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>

</mapper>