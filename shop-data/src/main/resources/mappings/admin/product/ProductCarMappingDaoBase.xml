<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.product.dao.ProductCarMappingDao">
	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值 2天 -->
	</cache>
	<!-- 全部字段 -->
	<sql id="productCarMappingColumns">
	<trim suffixOverrides=",">
		a.id AS "id",                                                        <!-- 主键id bigint(20)-->
		a.p_id AS "pId",                                                     <!-- 商品id bigint(20)-->
		a.car_ids AS "carIds",                                               <!-- 商品选择车型的id varchar(64)-->

	</trim>
	</sql>

	<!-- 关联表 -->
	<sql id="productCarMappingJoins">
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.id != null ">AND a.id = #{c.id}</if>
		<if test="c.pId != null ">AND a.p_id = #{c.pId}</if>
		<if test="c.carIds != null and c.carIds != ''">AND a.car_ids = #{c.carIds}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="ProductCarMapping">
		SELECT 
		<include refid="productCarMappingColumns"/>
		FROM product_car_mapping a
		<include refid="productCarMappingJoins"/>
		WHERE a.id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="ProductCarMapping">
		SELECT 
		<include refid="productCarMappingColumns"/>
		FROM product_car_mapping a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="ProductCarMapping">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="productCarMappingColumns"/>
		FROM product_car_mapping a
		<include refid="productCarMappingJoins"/>
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="ProductCarMapping">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="productCarMappingColumns"/>
		FROM product_car_mapping a
		<include refid="productCarMappingJoins"/>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO product_car_mapping
		<trim prefix="(" suffix=")" suffixOverrides=",">
			id,                                                <!-- 主键id bigint(20)-->
			p_id,                                              <!-- 商品id bigint(20)-->
			car_ids,                                           <!-- 商品选择车型的id varchar(64)-->

		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">#{entity.id},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">product_car_mapping_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.pId},                                     <!-- 商品id bigint(20)-->
			#{entity.carIds},                                  <!-- 商品选择车型的id varchar(64)-->

	</trim>
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO product_car_mapping
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.id != null">id,</if></if>
			<if test="entity.pkMode==2">id,</if>
			<if test="entity.pId != null">p_id,</if>                                           <!-- 商品id bigint(20)-->
			<if test="entity.carIds != null">car_ids,</if>                                     <!-- 商品选择车型的id varchar(64)-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.id != null">#{entity.id},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">product_car_mapping_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.pId != null">#{entity.pId},</if>                                            <!-- 商品id bigint(20)-->
			<if test="entity.carIds != null">#{entity.carIds},</if>                                      <!-- 商品选择车型的id varchar(64)-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE product_car_mapping 
		<set>
			p_id = #{entity.pId},                                           <!-- 商品id bigint(20)-->
			car_ids = #{entity.carIds},                                     <!-- 商品选择车型的id varchar(64)-->

		</set>
		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE product_car_mapping a 
		<set>
			p_id = #{entity.pId},                                           <!-- 商品id bigint(20)-->
			car_ids = #{entity.carIds},                                     <!-- 商品选择车型的id varchar(64)-->

		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE product_car_mapping
		<set>
			<if test="entity.pId != null">p_id = #{entity.pId},</if>                                                            <!-- 商品id bigint(20)-->
			<if test="entity.carIds != null">car_ids = #{entity.carIds},</if>                                                   <!-- 商品选择车型的id varchar(64)-->
		</set>
		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE product_car_mapping a
		<set>
			<if test="entity.pId != null">p_id = #{entity.pId},</if>                                                            <!-- 商品id bigint(20)-->
			<if test="entity.carIds != null">car_ids = #{entity.carIds},</if>                                                   <!-- 商品选择车型的id varchar(64)-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM product_car_mapping
		WHERE id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM product_car_mapping
		<where>
			<choose>
				<when test="list != null and list.size >0">
					id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM product_car_mapping a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM product_car_mapping a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>

</mapper>