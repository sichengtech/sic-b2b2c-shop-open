<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.product.dao.ProductUnitDao">
	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值2天 -->
	</cache>
	<!-- 全部字段 -->
	<sql id="productUnitColumns">
		a.id AS "id",                                                        <!-- 主键id bigint(20)-->
		a.name AS "name",                                                    <!-- 名称 nvarchar2(64)-->
		a.first_letter AS "firstLetter",                                     <!-- 首字母 nvarchar2(64)-->
		a.sort AS "sort",                                                    <!-- 排序 number(10)-->
		a.bak1 AS "bak1",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak2 AS "bak2",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak3 AS "bak3",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak4 AS "bak4",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak5 AS "bak5"                                                    <!-- 备用字段 nvarchar2(64)-->
		
	</sql>

	<!-- 关联表 -->
	<sql id="productUnitJoins">
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.id != null ">AND a.id = #{c.id}</if>
		<if test="c.name != null and c.name != ''">				
			<bind name="pattern" value="'%' + c.name + '%'" />				
			AND lower(a.name) LIKE lower(#{pattern})
		</if>
		<if test="c.firstLetter != null and c.firstLetter != ''">AND a.first_letter = #{c.firstLetter}</if>
		<if test="c.sort != null ">AND a.sort = #{c.sort}</if>
		<if test="c.bak1 != null and c.bak1 != ''">AND a.bak1 = #{c.bak1}</if>
		<if test="c.bak2 != null and c.bak2 != ''">AND a.bak2 = #{c.bak2}</if>
		<if test="c.bak3 != null and c.bak3 != ''">AND a.bak3 = #{c.bak3}</if>
		<if test="c.bak4 != null and c.bak4 != ''">AND a.bak4 = #{c.bak4}</if>
		<if test="c.bak5 != null and c.bak5 != ''">AND a.bak5 = #{c.bak5}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="ProductUnit">
		SELECT 
		<include refid="productUnitColumns"/>
		FROM product_unit a
		<include refid="productUnitJoins"/>
		WHERE a.id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="ProductUnit">
		SELECT
		<include refid="productUnitColumns"/>
		FROM product_unit a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="ProductUnit">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="productUnitColumns"/>
		FROM product_unit a
		<include refid="productUnitJoins"/>
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="ProductUnit">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="productUnitColumns"/>
		FROM product_unit a
		<include refid="productUnitJoins"/>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO product_unit(
			id,                                                <!-- 主键id bigint(20)-->
			name,                                              <!-- 名称 nvarchar2(64)-->
			first_letter,                                      <!-- 首字母 nvarchar2(64)-->
			sort,                                              <!-- 排序 number(10)-->
			bak1,                                              <!-- 备用字段 nvarchar2(64)-->
			bak2,                                              <!-- 备用字段 nvarchar2(64)-->
			bak3,                                              <!-- 备用字段 nvarchar2(64)-->
			bak4,                                              <!-- 备用字段 nvarchar2(64)-->
			bak5                                              <!-- 备用字段 nvarchar2(64)-->

		) VALUES (
			<if test="entity.pkMode==1">#{entity.id},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">product_unit_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.name},                                    <!-- 名称 nvarchar2(64)-->
			#{entity.firstLetter},                             <!-- 首字母 nvarchar2(64)-->
			#{entity.sort},                                    <!-- 排序 number(10)-->
			#{entity.bak1},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak2},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak3},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak4},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak5}                                    <!-- 备用字段 nvarchar2(64)-->

		)
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO product_unit
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.id != null">id,</if></if>
			<if test="entity.pkMode==2">id,</if>
			<if test="entity.name != null">name,</if>                                          <!-- 名称 nvarchar2(64)-->
			<if test="entity.firstLetter != null">first_letter,</if>                           <!-- 首字母 nvarchar2(64)-->
			<if test="entity.sort != null">sort,</if>                                          <!-- 排序 number(10)-->
			<if test="entity.bak1 != null">bak1,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5,</if>                                          <!-- 备用字段 nvarchar2(64)-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.id != null">#{entity.id},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">product_unit_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.name != null">#{entity.name},</if>                                          <!-- 名称 nvarchar2(64)-->
			<if test="entity.firstLetter != null">#{entity.firstLetter},</if>                            <!-- 首字母 nvarchar2(64)-->
			<if test="entity.sort != null">#{entity.sort},</if>                                          <!-- 排序 number(10)-->
			<if test="entity.bak1 != null">#{entity.bak1},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">#{entity.bak2},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">#{entity.bak3},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">#{entity.bak4},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">#{entity.bak5},</if>                                          <!-- 备用字段 nvarchar2(64)-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE product_unit SET
			name = #{entity.name},                                          <!-- 名称 nvarchar2(64)-->
			first_letter = #{entity.firstLetter},                           <!-- 首字母 nvarchar2(64)-->
			sort = #{entity.sort},                                          <!-- 排序 number(10)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段 nvarchar2(64)-->
			bak5 = #{entity.bak5}                                          <!-- 备用字段 nvarchar2(64)-->

		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE product_unit a SET
			name = #{entity.name},                                          <!-- 名称 nvarchar2(64)-->
			first_letter = #{entity.firstLetter},                           <!-- 首字母 nvarchar2(64)-->
			sort = #{entity.sort},                                          <!-- 排序 number(10)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段 nvarchar2(64)-->
			bak5 = #{entity.bak5}                                          <!-- 备用字段 nvarchar2(64)-->

		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE product_unit
		<set>
			<if test="entity.name != null">name = #{entity.name},</if>                                                          <!-- 名称 nvarchar2(64)-->
			<if test="entity.firstLetter != null">first_letter = #{entity.firstLetter},</if>                                    <!-- 首字母 nvarchar2(64)-->
			<if test="entity.sort != null">sort = #{entity.sort},</if>                                                          <!-- 排序 number(10)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
		</set>
		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE product_unit a
		<set>
			<if test="entity.name != null">name = #{entity.name},</if>                                                          <!-- 名称 nvarchar2(64)-->
			<if test="entity.firstLetter != null">first_letter = #{entity.firstLetter},</if>                                    <!-- 首字母 nvarchar2(64)-->
			<if test="entity.sort != null">sort = #{entity.sort},</if>                                                          <!-- 排序 number(10)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM product_unit
		WHERE id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM product_unit
		<where>
			<choose>
				<when test="list != null and list.size >0">
					id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM product_unit a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM product_unit a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>

</mapper>