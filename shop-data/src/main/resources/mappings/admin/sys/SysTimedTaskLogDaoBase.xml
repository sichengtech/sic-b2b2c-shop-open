<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.sys.dao.SysTimedTaskLogDao">
 	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值2天 -->
	</cache>
	<!-- 全部字段 -->
	<sql id="sysTimedTaskLogColumns">
		a.sttl_id AS "sttlId",                                               <!-- 主键 bigint(20)-->
		a.stt_id AS "sttId",                                                 <!-- 定时任务id bigint(20)-->
		a.start_time AS "startTime",                                         <!-- 执行开始时间 date(7)-->
		a.end_time AS "endTime",                                             <!-- 执行结束时间 date(7)-->
		a.result AS "result",                                                <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
		a.bak1 AS "bak1",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak2 AS "bak2",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak3 AS "bak3",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak4 AS "bak4",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.bak5 AS "bak5",                                                    <!-- 备用字段 nvarchar2(64)-->
		a.status AS "status"                                                 <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->
		
	</sql>

	<!-- 关联表 -->
	<sql id="sysTimedTaskLogJoins">
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.sttlId != null ">AND a.sttl_id = #{c.sttlId}</if>
		<if test="c.sttId != null ">AND a.stt_id = #{c.sttId}</if>
		<if test="c.beginStartTime != null and c.endStartTime != null ">AND a.start_time BETWEEN #{c.beginStartTime} AND #{c.endStartTime}</if>
		<if test="c.beginEndTime != null and c.endEndTime != null ">AND a.end_time BETWEEN #{c.beginEndTime} AND #{c.endEndTime}</if>
		<if test="c.result != null and c.result != ''">AND a.result = #{c.result}</if>
		<if test="c.bak1 != null and c.bak1 != ''">AND a.bak1 = #{c.bak1}</if>
		<if test="c.bak2 != null and c.bak2 != ''">AND a.bak2 = #{c.bak2}</if>
		<if test="c.bak3 != null and c.bak3 != ''">AND a.bak3 = #{c.bak3}</if>
		<if test="c.bak4 != null and c.bak4 != ''">AND a.bak4 = #{c.bak4}</if>
		<if test="c.bak5 != null and c.bak5 != ''">AND a.bak5 = #{c.bak5}</if>
		<if test="c.status != null and c.status != ''">AND a.status = #{c.status}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="SysTimedTaskLog">
		SELECT 
		<include refid="sysTimedTaskLogColumns"/>
		FROM sys_timed_task_log a
		<include refid="sysTimedTaskLogJoins"/>
		WHERE a.sttl_id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="SysTimedTaskLog">
		SELECT
		<include refid="sysTimedTaskLogColumns"/>
		FROM sys_timed_task_log a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.sttl_id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="SysTimedTaskLog">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="sysTimedTaskLogColumns"/>
		FROM sys_timed_task_log a
		<include refid="sysTimedTaskLogJoins"/>
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.sttl_id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="SysTimedTaskLog">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="sysTimedTaskLogColumns"/>
		FROM sys_timed_task_log a
		<include refid="sysTimedTaskLogJoins"/>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.sttl_id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.sttlId" keyColumn="sttl_id" useGeneratedKeys="true">
		INSERT INTO sys_timed_task_log(
			sttl_id,                                           <!-- 主键 bigint(20)-->
			stt_id,                                            <!-- 定时任务id bigint(20)-->
			start_time,                                        <!-- 执行开始时间 date(7)-->
			end_time,                                          <!-- 执行结束时间 date(7)-->
			result,                                            <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			bak1,                                              <!-- 备用字段 nvarchar2(64)-->
			bak2,                                              <!-- 备用字段 nvarchar2(64)-->
			bak3,                                              <!-- 备用字段 nvarchar2(64)-->
			bak4,                                              <!-- 备用字段 nvarchar2(64)-->
			bak5,                                              <!-- 备用字段 nvarchar2(64)-->
			status                                            <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->

		) VALUES (
			<if test="entity.pkMode==1">#{entity.sttlId},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">sys_timed_task_log_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.sttId},                                   <!-- 定时任务id bigint(20)-->
			#{entity.startTime},                               <!-- 执行开始时间 date(7)-->
			#{entity.endTime},                                 <!-- 执行结束时间 date(7)-->
			#{entity.result},                                  <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			#{entity.bak1},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak2},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak3},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak4},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.bak5},                                    <!-- 备用字段 nvarchar2(64)-->
			#{entity.status}                                  <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->

		)
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.sttlId" keyColumn="sttl_id" useGeneratedKeys="true">
		INSERT INTO sys_timed_task_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.sttlId != null">sttl_id,</if></if>
			<if test="entity.pkMode==2">sttl_id,</if>
			<if test="entity.sttId != null">stt_id,</if>                                       <!-- 定时任务id bigint(20)-->
			<if test="entity.startTime != null">start_time,</if>                               <!-- 执行开始时间 date(7)-->
			<if test="entity.endTime != null">end_time,</if>                                   <!-- 执行结束时间 date(7)-->
			<if test="entity.result != null">result,</if>                                      <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			<if test="entity.bak1 != null">bak1,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5,</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.status != null">status,</if>                                      <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.sttlId != null">#{entity.sttlId},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">sys_timed_task_log_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.sttId != null">#{entity.sttId},</if>                                        <!-- 定时任务id bigint(20)-->
			<if test="entity.startTime != null">#{entity.startTime},</if>                                <!-- 执行开始时间 date(7)-->
			<if test="entity.endTime != null">#{entity.endTime},</if>                                    <!-- 执行结束时间 date(7)-->
			<if test="entity.result != null">#{entity.result},</if>                                      <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			<if test="entity.bak1 != null">#{entity.bak1},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">#{entity.bak2},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">#{entity.bak3},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">#{entity.bak4},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">#{entity.bak5},</if>                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.status != null">#{entity.status},</if>                                      <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE sys_timed_task_log SET
			stt_id = #{entity.sttId},                                       <!-- 定时任务id bigint(20)-->
			start_time = #{entity.startTime},                               <!-- 执行开始时间 date(7)-->
			end_time = #{entity.endTime},                                   <!-- 执行结束时间 date(7)-->
			result = #{entity.result},                                      <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段 nvarchar2(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段 nvarchar2(64)-->
			status = #{entity.status}                                      <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->

		WHERE sttl_id = #{entity.sttlId}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE sys_timed_task_log a SET
			stt_id = #{entity.sttId},                                       <!-- 定时任务id bigint(20)-->
			start_time = #{entity.startTime},                               <!-- 执行开始时间 date(7)-->
			end_time = #{entity.endTime},                                   <!-- 执行结束时间 date(7)-->
			result = #{entity.result},                                      <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			bak1 = #{entity.bak1},                                          <!-- 备用字段 nvarchar2(64)-->
			bak2 = #{entity.bak2},                                          <!-- 备用字段 nvarchar2(64)-->
			bak3 = #{entity.bak3},                                          <!-- 备用字段 nvarchar2(64)-->
			bak4 = #{entity.bak4},                                          <!-- 备用字段 nvarchar2(64)-->
			bak5 = #{entity.bak5},                                          <!-- 备用字段 nvarchar2(64)-->
			status = #{entity.status}                                      <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->

		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE sys_timed_task_log
		<set>
			<if test="entity.sttId != null">stt_id = #{entity.sttId},</if>                                                      <!-- 定时任务id bigint(20)-->
			<if test="entity.startTime != null">start_time = #{entity.startTime},</if>                                          <!-- 执行开始时间 date(7)-->
			<if test="entity.endTime != null">end_time = #{entity.endTime},</if>                                                <!-- 执行结束时间 date(7)-->
			<if test="entity.result != null">result = #{entity.result},</if>                                                    <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.status != null">status = #{entity.status},</if>                                                    <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->
		</set>
		WHERE sttl_id = #{entity.sttlId}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE sys_timed_task_log a
		<set>
			<if test="entity.sttId != null">stt_id = #{entity.sttId},</if>                                                      <!-- 定时任务id bigint(20)-->
			<if test="entity.startTime != null">start_time = #{entity.startTime},</if>                                          <!-- 执行开始时间 date(7)-->
			<if test="entity.endTime != null">end_time = #{entity.endTime},</if>                                                <!-- 执行结束时间 date(7)-->
			<if test="entity.result != null">result = #{entity.result},</if>                                                    <!-- 执行结果（1成功 0失败） nvarchar2(64)-->
			<if test="entity.bak1 != null">bak1 = #{entity.bak1},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak2 != null">bak2 = #{entity.bak2},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak3 != null">bak3 = #{entity.bak3},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak4 != null">bak4 = #{entity.bak4},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.bak5 != null">bak5 = #{entity.bak5},</if>                                                          <!-- 备用字段 nvarchar2(64)-->
			<if test="entity.status != null">status = #{entity.status},</if>                                                    <!-- 执行状态（1完成 0执行中） nvarchar2(64)-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM sys_timed_task_log
		WHERE sttl_id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM sys_timed_task_log
		<where>
			<choose>
				<when test="list != null and list.size >0">
					sttl_id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM sys_timed_task_log a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM sys_timed_task_log a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>

</mapper>