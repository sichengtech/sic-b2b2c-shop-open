<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sicheng.admin.sys.dao.LogDao">
 	<cache type="com.sicheng.common.persistence.cache.DelegateCache">
		<property name="expire" value="172800"/><!-- 缓存有效期，单位：秒，默认值2天 -->
	</cache>
    <!-- 全部字段 -->
	<sql id="sysLogColumns">
		a.id AS "id",                                                        <!-- id number(19)-->
		a.type AS "type",                                                    <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
		a.title AS "title",                                                  <!-- 日志标题 nvarchar2(500)-->
		a.create_by AS "createBy.id",                                        <!-- create_by varchar2(64)-->
		a.create_date AS "createDate",                                       <!-- create_date timestamp(6)-->
		a.remote_addr AS "remoteAddr",                                       <!-- 操作用户的IP地址 varchar2(255)-->
		a.user_agent AS "userAgent",                                         <!-- 操作用户代理信息 varchar2(255)-->
		a.request_uri AS "requestUri",                                       <!-- 操作的URI varchar2(255)-->
		a.method AS "method",                                                <!-- 操作的方式 varchar2(5)-->
		a.params AS "params",                                                <!-- 操作提交的数据 clob-->
		a.exception AS "exception"                                           <!-- exception clob-->
		
	</sql>

	<!-- 关联表 -->
	<sql id="sysLogJoins">
	</sql>

	<!-- 复用的sql片段，where条件部分，使用者：deleteByWhere、countByWhere、selectByWhere、updateByWhere、updateByWhereSelective -->
	<sql id="Where_Clause">
	<if test="w!=null and w.e!=null">
		<bind name="c" value="w.e"/>
		<if test="c.id != null ">AND a.id = #{c.id}</if>
		<if test="c.type != null and c.type != ''">AND a.type = #{c.type}</if>
		<if test="c.title != null and c.title != ''">				
			<bind name="pattern" value="'%' + c.title + '%'" />				
			AND lower(a.title) LIKE lower(#{pattern})
		</if>
		<if test="c.createBy != null and c.createBy.id != null ">AND a.create_by = #{c.createBy.id}</if>
		<if test="c.beginCreateDate != null and c.endCreateDate != null ">AND a.create_date BETWEEN #{c.beginCreateDate} AND #{c.endCreateDate}</if>
		<if test="c.remoteAddr != null and c.remoteAddr != ''">AND a.remote_addr = #{c.remoteAddr}</if>
		<if test="c.userAgent != null and c.userAgent != ''">AND a.user_agent = #{c.userAgent}</if>
		<if test="c.requestUri != null and c.requestUri != ''">AND a.request_uri = #{c.requestUri}</if>
		<if test="c.method != null and c.method != ''">AND a.method = #{c.method}</if>
		<if test="c.params != null and c.params != ''">AND a.params = #{c.params}</if>
		<if test="c.exception != null and c.exception != ''">AND a.exception = #{c.exception}</if>
	</if>
	</sql>	

	<!--根据主键查询记录-->
	<select id="selectById" resultType="Log">
		SELECT 
		<include refid="sysLogColumns"/>
		FROM sys_log a
		<include refid="sysLogJoins"/>
		WHERE a.id = #{id}
	</select>

	<!-- 根据多个id查询出一个列表 -->
	<select id="selectByIdIn" resultType="Log">
		SELECT
		<include refid="sysLogColumns"/>
		FROM sys_log a
		<where>
			<choose>
				<when test="list != null and list.size >0">
					a.id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</select>

	<!--根据条件查询记录集-->
	<select id="selectByWhere" resultType="Log">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="sysLogColumns"/>
		FROM sys_log a
		<include refid="sysLogJoins"/>
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<when test="p!=null and p.orderBy != null">
				ORDER BY ${p.orderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>

	<!--查询所有记录集，无条件-->
	<select id="selectAll" resultType="Log">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if>
		<include refid="sysLogColumns"/>
		FROM sys_log a
		<include refid="sysLogJoins"/>
		<choose>
			<when test="w!=null and w.outputSqlOrderBy !=null">
				${w.outputSqlOrderBy}
			</when>
			<otherwise>
				ORDER BY a.id DESC
			</otherwise>
		</choose>
	</select>
	
	<!--插入。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insert" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO sys_log(
			id,                                                <!-- id number(19)-->
			type,                                              <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			title,                                             <!-- 日志标题 nvarchar2(500)-->
			create_by,                                         <!-- create_by varchar2(64)-->
			create_date,                                       <!-- create_date timestamp(6)-->
			remote_addr,                                       <!-- 操作用户的IP地址 varchar2(255)-->
			user_agent,                                        <!-- 操作用户代理信息 varchar2(255)-->
			request_uri,                                       <!-- 操作的URI varchar2(255)-->
			method,                                            <!-- 操作的方式 varchar2(5)-->
			params,                                            <!-- 操作提交的数据 clob-->
			exception                                         <!-- exception clob-->

		) VALUES (
			<if test="entity.pkMode==1">#{entity.id},</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">sys_log_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			#{entity.type},                                    <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			#{entity.title},                                   <!-- 日志标题 nvarchar2(500)-->
			#{entity.createBy.id},                             <!-- create_by varchar2(64)-->
			#{entity.createDate},                              <!-- create_date timestamp(6)-->
			#{entity.remoteAddr},                              <!-- 操作用户的IP地址 varchar2(255)-->
			#{entity.userAgent},                               <!-- 操作用户代理信息 varchar2(255)-->
			#{entity.requestUri},                              <!-- 操作的URI varchar2(255)-->
			#{entity.method},                                  <!-- 操作的方式 varchar2(5)-->
			#{entity.params},                                  <!-- 操作提交的数据 clob-->
			#{entity.exception}                               <!-- exception clob-->

		)
	</insert>

	<!--插入,只把非空的值插入到对应的字段。并返回自增长的主键值，mysql、oracle都可以-->
	<insert id="insertSelective" keyProperty="entity.id" keyColumn="id" useGeneratedKeys="true">
		INSERT INTO sys_log
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1"><if test="entity.id != null">id,</if></if>
			<if test="entity.pkMode==2">id,</if>
			<if test="entity.type != null">type,</if>                                          <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			<if test="entity.title != null">title,</if>                                        <!-- 日志标题 nvarchar2(500)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">create_by,</if>                              <!-- create_by varchar2(64)-->
			<if test="entity.createDate != null">create_date,</if>                             <!-- create_date timestamp(6)-->
			<if test="entity.remoteAddr != null">remote_addr,</if>                             <!-- 操作用户的IP地址 varchar2(255)-->
			<if test="entity.userAgent != null">user_agent,</if>                               <!-- 操作用户代理信息 varchar2(255)-->
			<if test="entity.requestUri != null">request_uri,</if>                             <!-- 操作的URI varchar2(255)-->
			<if test="entity.method != null">method,</if>                                      <!-- 操作的方式 varchar2(5)-->
			<if test="entity.params != null">params,</if>                                      <!-- 操作提交的数据 clob-->
			<if test="entity.exception != null">exception,</if>                                <!-- exception clob-->
		</trim>
		 VALUES 
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="entity.pkMode==1">
				<if test="entity.id != null">#{entity.id},</if>
			</if>
			<if test="entity.pkMode==2">
				<if test="entity.dbType$ == 'oracle'">sys_log_seq.nextval,</if>
				<if test="entity.dbType$ == 'mssql'">null,</if>
				<if test="entity.dbType$ == 'mysql'">null,</if>
			</if>
			<if test="entity.type != null">#{entity.type},</if>                                          <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			<if test="entity.title != null">#{entity.title},</if>                                        <!-- 日志标题 nvarchar2(500)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">#{entity.createBy.id},</if>                            <!-- create_by varchar2(64)-->
			<if test="entity.createDate != null">#{entity.createDate},</if>                              <!-- create_date timestamp(6)-->
			<if test="entity.remoteAddr != null">#{entity.remoteAddr},</if>                              <!-- 操作用户的IP地址 varchar2(255)-->
			<if test="entity.userAgent != null">#{entity.userAgent},</if>                                <!-- 操作用户代理信息 varchar2(255)-->
			<if test="entity.requestUri != null">#{entity.requestUri},</if>                              <!-- 操作的URI varchar2(255)-->
			<if test="entity.method != null">#{entity.method},</if>                                      <!-- 操作的方式 varchar2(5)-->
			<if test="entity.params != null">#{entity.params},</if>                                      <!-- 操作提交的数据 clob-->
			<if test="entity.exception != null">#{entity.exception},</if>                                <!-- exception clob-->
		</trim>
	</insert>

	<!-- 根据主键更新记录-->
	<update id="updateById">
		UPDATE sys_log SET
			type = #{entity.type},                                          <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			title = #{entity.title},                                        <!-- 日志标题 nvarchar2(500)-->
			create_by = #{entity.createBy.id},                              <!-- create_by varchar2(64)-->
			create_date = #{entity.createDate},                             <!-- create_date timestamp(6)-->
			remote_addr = #{entity.remoteAddr},                             <!-- 操作用户的IP地址 varchar2(255)-->
			user_agent = #{entity.userAgent},                               <!-- 操作用户代理信息 varchar2(255)-->
			request_uri = #{entity.requestUri},                             <!-- 操作的URI varchar2(255)-->
			method = #{entity.method},                                      <!-- 操作的方式 varchar2(5)-->
			params = #{entity.params},                                      <!-- 操作提交的数据 clob-->
			exception = #{entity.exception}                                <!-- exception clob-->

		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录-->
	<update id="updateByWhere">
		UPDATE sys_log a SET
			type = #{entity.type},                                          <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			title = #{entity.title},                                        <!-- 日志标题 nvarchar2(500)-->
			create_by = #{entity.createBy.id},                              <!-- create_by varchar2(64)-->
			create_date = #{entity.createDate},                             <!-- create_date timestamp(6)-->
			remote_addr = #{entity.remoteAddr},                             <!-- 操作用户的IP地址 varchar2(255)-->
			user_agent = #{entity.userAgent},                               <!-- 操作用户代理信息 varchar2(255)-->
			request_uri = #{entity.requestUri},                             <!-- 操作的URI varchar2(255)-->
			method = #{entity.method},                                      <!-- 操作的方式 varchar2(5)-->
			params = #{entity.params},                                      <!-- 操作提交的数据 clob-->
			exception = #{entity.exception}                                <!-- exception clob-->

		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键更新记录,只把非空的值更到对应的字段-->
	<update id="updateByIdSelective">
		UPDATE sys_log
		<set>
			<if test="entity.type != null">type = #{entity.type},</if>                                                          <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			<if test="entity.title != null">title = #{entity.title},</if>                                                       <!-- 日志标题 nvarchar2(500)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">create_by = #{entity.createBy.id},</if>                                       <!-- create_by varchar2(64)-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- create_date timestamp(6)-->
			<if test="entity.remoteAddr != null">remote_addr = #{entity.remoteAddr},</if>                                       <!-- 操作用户的IP地址 varchar2(255)-->
			<if test="entity.userAgent != null">user_agent = #{entity.userAgent},</if>                                          <!-- 操作用户代理信息 varchar2(255)-->
			<if test="entity.requestUri != null">request_uri = #{entity.requestUri},</if>                                       <!-- 操作的URI varchar2(255)-->
			<if test="entity.method != null">method = #{entity.method},</if>                                                    <!-- 操作的方式 varchar2(5)-->
			<if test="entity.params != null">params = #{entity.params},</if>                                                    <!-- 操作提交的数据 clob-->
			<if test="entity.exception != null">exception = #{entity.exception},</if>                                           <!-- exception clob-->
		</set>
		WHERE id = #{entity.id}
	</update>

	<!-- 根据条件更新记录,只把非空的值更到对应的字段-->
	<update id="updateByWhereSelective">
		UPDATE sys_log a
		<set>
			<if test="entity.type != null">type = #{entity.type},</if>                                                          <!-- 日志类型（1：接入日志；2：错误日志） char(1)-->
			<if test="entity.title != null">title = #{entity.title},</if>                                                       <!-- 日志标题 nvarchar2(500)-->
			<if test="entity.createBy!= null and entity.createBy.id!= null ">create_by = #{entity.createBy.id},</if>                                       <!-- create_by varchar2(64)-->
			<if test="entity.createDate != null">create_date = #{entity.createDate},</if>                                       <!-- create_date timestamp(6)-->
			<if test="entity.remoteAddr != null">remote_addr = #{entity.remoteAddr},</if>                                       <!-- 操作用户的IP地址 varchar2(255)-->
			<if test="entity.userAgent != null">user_agent = #{entity.userAgent},</if>                                          <!-- 操作用户代理信息 varchar2(255)-->
			<if test="entity.requestUri != null">request_uri = #{entity.requestUri},</if>                                       <!-- 操作的URI varchar2(255)-->
			<if test="entity.method != null">method = #{entity.method},</if>                                                    <!-- 操作的方式 varchar2(5)-->
			<if test="entity.params != null">params = #{entity.params},</if>                                                    <!-- 操作提交的数据 clob-->
			<if test="entity.exception != null">exception = #{entity.exception},</if>                                           <!-- exception clob-->
		</set>
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据主键删除记录 -->
	<update id="deleteById">
		DELETE FROM sys_log
		WHERE id = #{id}
	</update>

	<!-- 根据多个id删除记录 -->
	<update id="deleteByIdIn">
		DELETE FROM sys_log
		<where>
			<choose>
				<when test="list != null and list.size >0">
					id in
					<foreach close=")" collection="list" item="item" open="(" separator=",">
						#{item}
					</foreach>
				</when>
				<otherwise> 1=2 </otherwise>
			</choose>
		</where>
	</update>
	
	<!-- 根据条件删除记录 -->
	<update id="deleteByWhere">
		DELETE <if test="w!=null and w.mysql">a </if>FROM sys_log a
		where  <!-- 防止无where条件时，删除全表、更新全表 -->
		<trim prefixOverrides="AND |OR ">
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</trim>
	</update>

	<!-- 根据条件查询记录总数 -->
	<select id="countByWhere" resultType="java.lang.Integer">
		SELECT <if test="w!=null and w.distinct">DISTINCT</if> COUNT(*) FROM sys_log a
		<where>
			<if test="w!=null">
			<include refid="Where_Clause" />
			${w.outputSqlWhere}
			</if>
		</where>
	</select>
</mapper>