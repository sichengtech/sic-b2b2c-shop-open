<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:task="http://www.springframework.org/schema/task" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd"
	default-lazy-init="true">
	<description>
		工厂配置文件-开源版
	</description>
	
	<!-- 
	短信网关
	SmsSender 短信发送者，请使用我来发送短信 
	SmsAliyunSenderImpl  阿里云短信网关
	-->
	<bean id="smsSender" class="com.sicheng.common.sms.SmsAliyunSenderImpl"></bean>
	
	<!-- 
	app消息通知网关
	appPush app消息通知发送者，请使用我来发送app消息通知 
	AppPushImpl 个推的app通知发送网关
	-->
	<bean id="appPush" class="com.sicheng.common.apppush.AppPushImpl"></bean>
	
	<!--
	shopCache缓存的作用：
	shopCache用于缓存本系统业务层（service层）的数据，都是业务上的数据，数据一般量不大。（大量的SQL查询结果已被mybatis二级缓存挡住了）

	shopCache缓存的实现：
	EhShopCache类，是EhCache做为shopCache缓存。使用EhCache的好处是方便，它平台内置，不需要额外安装部署。（作者在日常开发时就使用EhCache）
	-->
	<bean id="shopCache" class="com.sicheng.common.cache.EhShopCache"></bean>
	
	
	<!--
	MyBatis二级缓存的作用：
	MyBatis 3  有一个强大、成熟的查询缓存(二级缓存)功能，可以非常方便配置。
	默认情况下MyBatis 是没有开启二级缓存的,默认只开启了一级缓存(session缓存)。
	MyBatis二级缓存可以对SQL的查询结果进行缓存，以SQL为key，以查询结果为value，缓存到Ehchache\Redis中，以减少数据库访问频次提高查询性能。
	select操作会把查询结果放入缓存，insert,update,delete操作会清空所在namespace下的全部缓存。

	MyBatis二级缓存有实现：
	MybatisEhCache类，是EhCache做为MyBatis二级缓存。使用EhCache的好处是方便，它平台内置，不需要额外安装部署。（作者在日常开发时就使用EhCache）
	MybatisNoCache类 是表示不使用MyBatis二级缓存

	特点：
	这几个MyBatis二级缓存的实现类，注意scope="prototype"，它是多实例的，一个实例对应一个namespace缓存分区对应一张数据表，清理缓存时namespace是最小单位清理。
	-->
	<bean id="mybatisEhcache" class="com.sicheng.common.persistence.cache.MybatisEhcache" scope="prototype">
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	<!-- 使用NoCache表示不使用二级缓存-->
<!--	<bean id="mybatisNoCache" class="com.sicheng.common.persistence.cache.MybatisNoCache" scope="prototype">-->
<!--	</bean> -->
	
	<!-- 
	lockConfig的作用是：
	用来保证同一个定时任务只能在一个服务器节点上执行，在单节点部署的背景下，“定时任务”全局也只有一份，所以最多只能在一个服务器节点上执行。
	选项：false:在工程采用了单点部署的情况下使用false。
	-->
	<bean id="lockConfig" class="com.sicheng.common.redis.LockConfig" scope="prototype">
		<property name="distributed" value="false" />
	</bean>

	<!-- Shiro缓存管理器
	EhCacheManager类，是EhCache做为Shiro缓存管理器。（作者在日常开发时就使用EhCache）
	Shiro缓存管理器 ehcache实现，适用于单机环境-->
	<bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManager" ref="cacheManager"/>
	</bean>

	<!--
	“文章”全文检索接口，用于通过关键词来搜索出相关的文章。
	以下实现：
	ArticleSearch4Solr类，是Solr实现。需要提前部署Solr服务。
	-->
	<bean id="articleSearch" class="com.sicheng.search.ArticleSearch4Solr" destroy-method="destroy"></bean>

	<!--
	“商品”全文检索接口,使用多个条件搜索商品
	以下实现：
	ArticleSearch4Solr类，是Solr实现。需要提前部署Solr服务。
	-->
	<bean id="productSearch" class="com.sicheng.search.ProductSearch4Solr" destroy-method="destroy"></bean>
</beans>