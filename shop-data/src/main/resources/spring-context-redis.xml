<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	default-lazy-init="true">

	<description>Jedis Configuration</description>


	<!-- jedis连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
        <property name="minIdle" value="5" /> <!-- 最小空闲连接数, 默认0  -->
        <property name="maxIdle" value="50" /> <!-- 最大空闲连接数, 默认8个  -->
        <property name="maxTotal" value="500" />  <!-- 最大连接数, 默认8个。当空闲连接>最大空闲数时，并且空闲30分钟后被逐出-->
        <property name="blockWhenExhausted" value="true" /> 
        <property name="maxWaitMillis" value="-1" /> <!-- 获取连接时的最大等待毫秒数(如果设置为阻塞时BlockWhenExhausted),如果超时就抛异常, 小于零:阻塞不确定的时间,  默认-1 -->
        <property name="testOnBorrow" value="false" />  <!-- 当调用borrow Object方法时，是否进行有效性检查 -->
    </bean> 
    
	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <!--  使用的构造函数：JedisPool(final GenericObjectPoolConfig poolConfig, final String host, int port,
        int timeout, final String password, final int database)      -->
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.host}" type="java.lang.String"/>  <!-- IP -->
		<constructor-arg index="2" value="${redis.port}" type="int" />  <!-- 端口 -->
		<constructor-arg index="3" value="5000" type="int" /> <!-- 超时时间 -->
		<constructor-arg index="4" value="${redis.password}" type="java.lang.String" /><!-- 密码 -->
		<constructor-arg index="5" value="${redis.dbIndex}" type="int" /><!-- Redis默认有16个库,默认连接的是第5个 -->
	</bean>

	<!-- jedis客户端 -->
    <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
        <property name="hostName" value="${redis.host}" /> 
        <property name="port" value="${redis.port}"/> 
        <property name="password" value="${redis.password}"/>
        <property name="poolConfig" ref="jedisPoolConfig" />
        <property name="usePool" value="true"/>
        <property name="timeout" value="5000"/> <!-- 请求超时时间,默认2000 -->
        <property name="database" value="${redis.dbIndex}"/> <!-- Redis默认有16个库,默认连接的是第5个 -->
    </bean> 

	<!-- RedisTemplate，提供了对Redis访问的进一步封装，对连接的建立、释放、对象序列化提供了默认实现 -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">   
        <property name="connectionFactory"   ref="jedisConnectionFactory" />   
        <property name="keySerializer">   
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />   
        </property>      
        <property name="valueSerializer">   
            <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />   
        </property>   
        <property name="hashKeySerializer">     
           <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>     
        </property>   
        <property name="hashValueSerializer">   
           <bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>     
        </property> 
     </bean> 	
     
</beans>