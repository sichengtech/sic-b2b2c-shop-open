<?xml version="1.0"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.sicheng</groupId>
        <artifactId>shop-all</artifactId>
        <version>2.0</version>
    </parent>
    <artifactId>upload</artifactId>
    <packaging>war</packaging>
    <name>shop-web-upload</name>
    <url>http://maven.apache.org</url>
    <dependencies>
        <!-- 依赖基础模块 开始 -->
        <dependency>
            <groupId>com.sicheng</groupId>
            <artifactId>shop-data</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- 依赖基础模块 结束 -->

        <!-- 依赖第三方jar包 -->

        <!-- maven依赖的本地jar包 -->

        <!-- 百度富文本编辑的java服务端，在处理上传文件时，依赖本json包，与fastJson小有不同 -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20170516</version>
        </dependency>

        <!-- java图片处理工具
         Thumbnailator 是一个优秀的图片处理的Google开源Java类库，可运行于OpenJdk8\11\17
         默认使用的是Thumbnailator方案，通过修改  src/main/resources/spring-context-factory2.xml 来选择图片处理方案
         -->
        <dependency>
            <groupId>net.coobird</groupId>
            <artifactId>thumbnailator</artifactId>
            <version>0.4.19</version>
        </dependency>

        <!-- GM图片处理工具的java接口
         (依赖GraphicsMagick,需要在操作系统是单独安装GM程序,并通过命令行调用GM)
         当你在操作系统上单独安装了GraphicsMagick程序后，才可使用本方案。
         默认使用的是Thumbnailator方案，通过修改  src/main/resources/spring-context-factory2.xml 来选择图片处理方案
         -->
        <dependency>
            <groupId>org.im4java</groupId>
            <artifactId>im4java</artifactId>
            <version>1.4.0</version>
        </dependency>

        <!-- SimpleImage是阿里巴巴的一个Java图片处理的类库，可以实现图片缩略、水印等处理。
         阿里巴巴 simpleimage 图片处理工具类，必须使用Oracle JDK8,不能使用OpenJDK8否则报某类找不到。
         为了使用OpenJDK8所以现在不在使用SimpleImage了。
         默认使用的是Thumbnailator方案，通过修改  src/main/resources/spring-context-factory2.xml 来选择图片处理方案
         -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>simpleimage</artifactId>
            <version>1.2.3</version>
        </dependency>

        <!-- sun提供的图片处理库,ImageUtils4SI 需要这个jar-->
        <dependency>
            <groupId>com.sun</groupId>
            <artifactId>jai_codec</artifactId>
            <version>1.1.3</version>
        </dependency>
        <!-- sun提供的图片处理库,ImageUtils4SI 需要这个jar -->
        <dependency>
            <groupId>javax.media</groupId>
            <artifactId>jai-core</artifactId>
            <version>1.1.3</version>
        </dependency>

        <!-- 阿里云OSS存储 -->
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>2.8.2</version>
        </dependency>

        <!--
        Minio 是个基于 Golang 编写的开源对象存储套件,它兼容亚马逊S3云存储服务接口。使用 Amazon S3 v2 / v4 API。
        可以使用Minio SDK，Minio Client，AWS SDK 和 AWS CLI 访问Minio服务器。
        本项目使用Minio做为阿里云OSS的替代品。
         -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>8.5.2</version>
            <exclusions>
                <exclusion>
                    <artifactId>bcprov-jdk15on</artifactId>
                    <groupId>org.bouncycastle</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--
        使用TwelveMonkeys扩充Java imageio包，支持读写更多格式图片。
        Java的ImageIO包，实际上就是Javax下的ImageIO，包名位置：javax.imageio。可以说，是Java发布之初，就存在的基础包。作用就是读取图片为IO流，进而进行处理。
        ImageIO支持的图片格式，就基本代表你Java原生的支持了。
        以看到，支持的格式很多，但是现在一些比较新的格式是不支持的（比如：webp)。
        虽然ImageIO支持JEPG，其实JEPG也支持不完整，需要扩充。
        使用TwelveMonkeys可以扩展JavaX的ImageIO的包。这个过程很丝滑，你并不需要自己写任何的反射或者任何的配置类，只需要Maven内引用，即可使用。
        参考：https://juejin.cn/post/7055461293456621582

        我引入TwelveMonkeys还有一个原因，因为TwelveMonkeys ImageIO JPEG插件能够读取破损的jpg图像，即使ICC配置文件段被打破。
        它将发出警告(如果您已经注册了IIOReadWarningListener)，告诉您将忽略ICC配置文件。我已经测试过了，而且它可以很好地处理JPEG文件。
        您不需要更改任何代码，只需添加所需的依赖项(来自上面的链接)，它就会正常工作了。
         -->
        <!-- 支持jpeg -->
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-jpeg</artifactId>
            <version>3.10.1</version>
        </dependency>
        <!-- 支持webp -->
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-webp</artifactId>
            <version>3.10.1</version>
        </dependency>
        <!-- 支持SVG -->
        <dependency>
            <groupId>com.twelvemonkeys.imageio</groupId>
            <artifactId>imageio-batik</artifactId>
            <version>3.10.1</version>
        </dependency>
        <!-- 支持SVG -->
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-svgpp</artifactId>
            <version>1.17</version>
        </dependency>



    </dependencies>
</project>
