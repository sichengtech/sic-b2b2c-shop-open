<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>wap</display-name>

	<!-- Spring Context ConfigLocation -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath*:/spring-context*.xml</param-value>
	</context-param>
	<listener>
		<listener-class>com.sicheng.common.web.SpringContextLoader</listener-class>
	</listener>

	<!-- 在spring mvc中，为了随时都能取到当前请求的request对象，可以使用RequestContextHolder，需要配置RequestContextListener
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	 -->

	<!-- 在Servlet容器(比如Tomcat)停止时，取消注册JDBC的驱动。从而达到消除控制台的警告信息的目标。 -->
	<listener>
		<listener-class>com.sicheng.common.web.AppContextListener</listener-class>
	</listener>

	<!-- 防止xss攻击过滤器 -->
	<filter>
		<filter-name>XssEscape</filter-name>
		<filter-class>com.sicheng.common.xss.XssFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>XssEscape</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<!-- 支持跨域过滤器    2019-5-13 zl说，采用CorsFilter方案，未采用[mvc:cors/]方案 -->
	<filter>
		<filter-name>CorsFilter</filter-name>
		<filter-class>com.sicheng.wap.filter.CorsFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>CorsFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>

	<!-- SignFilter 签名过滤器 -->
	<filter>
		<filter-name>SignFilter</filter-name>
		<filter-class>com.sicheng.common.utils4m.SignFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>SignFilter</filter-name>
		<url-pattern>/api/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
	</filter-mapping>

	<!-- SpringSesssion过滤器 -->
	<!-- <filter>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping> -->

	<!-- Spring 编码过滤器 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>	

 	<!-- R工具过滤器 -->
	<filter>
		<filter-name>r</filter-name>
		<filter-class>com.sicheng.common.web.R</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>r</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
		
	<!-- 防止直接访问jsp和html -->
	<filter>
		<filter-name>JspFilter</filter-name>
		<filter-class>com.sicheng.common.filter.ShopJspFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>JspFilter</filter-name>
		<url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>JspFilter</filter-name>
		<url-pattern>*.html</url-pattern>
	</filter-mapping>
	
	<!-- 检查网站是否开放 -->
	<filter>
		<filter-name>ShopIsOpenFilter</filter-name>
		<filter-class>com.sicheng.common.filter.ShopOpenFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>ShopIsOpenFilter</filter-name>
		<url-pattern>*.do</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>ShopIsOpenFilter</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping>
	
 	<!-- weixin登陆过滤器，代理给com.sicheng.wap.filter.LoginFilterWX来处理 -->
	<filter>
		<filter-name>loginFilterWX</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>loginFilterWX</filter-name>
		<url-pattern>*.htm</url-pattern>
	</filter-mapping> 

	<!-- wap系统静态资源访问器,支持正则表达式 -->
	<filter>
		<filter-name>frontStaticFileFilter</filter-name>
		<filter-class>com.sicheng.common.filter.FrontStaticFileFilter</filter-class>
        <init-param>
            <description>以下url需要由本filter来处理，支持正则，多个值之间用','分割,(?i) 表示不区分大小写,*.js,*.css,*.jpg,*.png,*.gif,*.bmp 等
            .+(?i)\.js,.+(?i)\.css,.+(?i)\.jpg,.+(?i)\.png,.+(?i)\.gif,.+(?i)\.bmp</description>  
            <param-name>include</param-name>
            <param-value></param-value>  
        </init-param>  
        <init-param>  
            <description>以下url不需要由本filter来处理，支持正则，多个值之间用','分割,(?i) 表示不区分大小写</description>  
            <param-name>exclude</param-name>  
            <param-value>.+(?i)\.do,.+(?i)\.htm,.+(?i)\.jsp,.+(?i)\.html</param-value>  
        </init-param> 
        <init-param>  
            <description>配置basePath基础路径。/views/*/*/表示要被忽略前三层目录，如访问的是/views/front/qiche/a.js，取出a.js，再到模板目录中去查找a.js</description>  
            <param-name>basePath</param-name>  
            <param-value>/views/*/*/</param-value>  
        </init-param> 
	</filter>
	<filter-mapping>
		<filter-name>frontStaticFileFilter</filter-name>
		<url-pattern>/views/wap/*</url-pattern>
	</filter-mapping>
	
	<!--front Spring MVC Servlet -->
	<servlet>
		<servlet-name>springServletFront</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath*:/spring-mvc-wap.xml</param-value>
		</init-param>
		<load-on-startup>5</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>springServletFront</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>	

	<!-- app开发完成后，将不再使用seesion,改为使用token -->
	<!-- Session过期时间配置，对未使用shiro的子系统有效(如前台、买家中心、商家后台),
	时间单位是分钟，并且只能是整数，如果是零或负数，那么会话就永远不会超时-->
	<!-- 管理后台，因为使用shiro来管理权限、用户、登录，Session过期时间也由shiro管理
	请修改"fdp.properties" 文件 "session.sessionTimeout" 参数.-->
	<!-- <session-config>
		<session-timeout>30</session-timeout>
	</session-config> -->

	<!-- 全局的404\500页面，所有的404\500状态码，都会展示这个页面。如a.js没找到404也会展示这个404页面，与spring没有关系 -->
	<error-page>
		<error-code>500</error-code>
		<location>/views/error/500.jsp</location>
	</error-page>
	<error-page>
		<error-code>404</error-code>
		<location>/views/error/404.jsp</location>
	</error-page>
	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>
	
</web-app>